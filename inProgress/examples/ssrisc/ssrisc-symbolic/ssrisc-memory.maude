mod SSRISC-MEMORY is including SSRISC-COMMUNICATION-INTERFACE + SSRISC-SYNTAX + K .

   
      op last :  -> K . 

mb configuration
  < k > (.).K  </ k > 
  < cmem > (.).Map  </ cmem > 
  < dmem > (.).Map  </ dmem > : KSentence . 

mb rule < k >  imiss (PC) =>  imissSolved(PC, Ins) </ k > 
     < cmem >...   PC:Int32 |->  Ins:Instr ...</ cmem > : KSentence . 

mb rule < k >  imiss (PC) =>  last </ k > 
     < cmem > CMem:Map </ cmem > 
     if notBool ($hasMapping (CMem, PC)) : KSentence .

mb rule < k >  dmiss (AddrS) =>  dmissSolved(AddrS, DataS)  ...</ k > 
     < dmem >  AddrS:Val32 |->  DataS:Val32 </ dmem > : KSentence . 

mb rule < k >  dmiss (AddrS) =>  dmissSolved(AddrS, 0)  ...</ k > 
     < dmem > DMem:Map ((.).Map  =>  AddrS:Val32 |->  0)</ dmem > 
     if notBool ($hasMapping (DMem, AddrS)) : KSentence .

mb rule < k >  write (Addr:Int32, Data:Int32) =>  .   ...</ k > 
     < dmem >...   Addr |->  ( ?  =>  Data)  ...</ dmem > : KSentence . 

mb rule < k >  write (Addr:Int32, Data:Int32) =>  .   ...</ k > 
     < dmem > DMem:Map ((.).Map  =>  Addr |->  Data)</ dmem > 
     if notBool ($hasMapping (DMem, Addr)) : KSentence .

var Ins : Instr . var DataS : Val32 . var Addr : Int32 . var PC : Int32 . var AddrS : Val32 . var CMem : Map . var Data : Int32 . var DMem : Map .  ops k dmem cmem : -> CellLabel .  endm
