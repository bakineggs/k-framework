***(

    This file is part of the K Framework Maude library.

    Copyright 2009-2011 Grigore Rosu
    Portions Copyright 2004-2006 SRI International, Menlo Park, CA 94025, USA.

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.

***)

---
---	Maude internet socket external Socket-Objects.
---	Version 2.3.
---

mod CONFIGURATION-BUILTIN-MODULE is
  sorts Socket-Attribute Socket-AttributeSet .
  subsort Socket-Attribute < Socket-AttributeSet .
  op .AttributeSet : -> Socket-AttributeSet [ctor] .
  op _,_ : Socket-AttributeSet Socket-AttributeSet -> Socket-AttributeSet [ctor assoc comm id: .AttributeSet] .

  sorts Socket-Oid Socket-Cid Socket-Object Socket-Msg Socket-Portal Socket-Configuration .
  subsort Socket-Object Socket-Msg Socket-Portal < Socket-Configuration .
  op <_:_|_> : Socket-Oid Socket-Cid Socket-AttributeSet -> Socket-Object [ctor object] .
  op .Configuration : -> Socket-Configuration [ctor] .
  op __ : Socket-Configuration Socket-Configuration -> Socket-Configuration [ctor config assoc comm id: .Configuration] .
  op <> : -> Socket-Portal [ctor] .
endm

mod SOCKET-BUILTIN-MODULE is
  protecting PL-STRING .
  including CONFIGURATION-BUILTIN-MODULE .

  op socket : Nat -> Socket-Oid [ctor] .

  op createClientTcpSocket : Socket-Oid Socket-Oid String Nat -> Socket-Msg [ctor msg format (b o)] .
  op createServerTcpSocket : Socket-Oid Socket-Oid Nat Nat -> Socket-Msg [ctor msg format (b o)] .
  op createdSocket : Socket-Oid Socket-Oid Socket-Oid -> Socket-Msg [ctor msg format (m o)] .

  op acceptClient : Socket-Oid Socket-Oid -> Socket-Msg [ctor msg format (b o)] .
  op acceptedClient : Socket-Oid Socket-Oid String Socket-Oid -> Socket-Msg [ctor msg format (m o)] .

  op send : Socket-Oid Socket-Oid String -> Socket-Msg [ctor msg format (b o)] .
  op sent : Socket-Oid Socket-Oid -> Socket-Msg [ctor msg format (m o)] .

  op receive : Socket-Oid Socket-Oid -> Socket-Msg [ctor msg format (b o)] .
  op received : Socket-Oid Socket-Oid String -> Socket-Msg [ctor msg format (m o)] .

  op closeSocket : Socket-Oid Socket-Oid -> Socket-Msg [ctor msg format (b o)] .
  op closedSocket : Socket-Oid Socket-Oid String -> Socket-Msg [ctor msg format (m o)] .

  op socketError : Socket-Oid Socket-Oid String -> Socket-Msg [ctor msg format (r o)] .

  op socketManager : -> Socket-Oid
        [special (
           id-hook SocketManagerSymbol
	   op-hook succSymbol			(sNat_ : Nat ~> NzNat)
	   op-hook stringSymbol			(<Strings> : ~> String)
	   op-hook socketOidSymbol		(socket : Nat ~> Socket-Oid)
	   op-hook createClientTcpSocketMsg	(createClientTcpSocket : Socket-Oid Socket-Oid String Nat ~> Socket-Msg)
	   op-hook createServerTcpSocketMsg	(createServerTcpSocket : Socket-Oid Socket-Oid Nat Nat ~> Socket-Msg)
	   op-hook createdSocketMsg		(createdSocket : Socket-Oid Socket-Oid Socket-Oid ~> Socket-Msg)
	   op-hook acceptClientMsg		(acceptClient : Socket-Oid Socket-Oid ~> Socket-Msg)
	   op-hook acceptedClientMsg		(acceptedClient : Socket-Oid Socket-Oid String Socket-Oid ~> Socket-Msg)
	   op-hook sendMsg			(send : Socket-Oid Socket-Oid String ~> Socket-Msg)
	   op-hook sentMsg			(sent : Socket-Oid Socket-Oid ~> Socket-Msg)
	   op-hook receiveMsg			(receive : Socket-Oid Socket-Oid ~> Socket-Msg)
	   op-hook receivedMsg			(received : Socket-Oid Socket-Oid String ~> Socket-Msg)
	   op-hook closeSocketMsg		(closeSocket : Socket-Oid Socket-Oid ~> Socket-Msg)
	   op-hook closedSocketMsg		(closedSocket : Socket-Oid Socket-Oid String ~> Socket-Msg)
	   op-hook socketErrorMsg		(socketError : Socket-Oid Socket-Oid String ~> Socket-Msg))] .
endm
