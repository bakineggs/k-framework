mod P-LIST-COPY is including IMP-SYNTAX + LIST-HP .
	      op a :  -> Id .    op b :  -> Id .    op next :  -> Id .    op i :  -> Id .    op x :  -> Id .    op y :  -> Id .    op copy :  -> Id .    op nodeList :  -> Id .    op val :  -> Id .  
	      op ?b :  -> ?Int .    op ?i :  -> ?Int .    op ?x :  -> ?Int .    op ?v :  -> ?Int .    op ?y :  -> ?Int .    op ?w :  -> ?Int .    op ?a :  -> ?Int . 
	      op a0 :  -> FreeInt .  
	      op ?A :  -> ?Seq .    op ?B :  -> ?Seq .    op ?X :  -> ?Seq .    op ?A' :  -> ?Seq . 
	      op A :  -> FreeSeq .  

	      op pListCopy :  -> Decl . 

	eq pListCopy =  (
 
 struct nodeList {
   int val ; 
   struct nodeList * next ; 
 }; 
 
 int copy(struct nodeList * a ; )
 //  pre < config >  
         < env >  a |->  [a0 :  & struct nodeList] </ env > 
         < heap >  list(a0)(A) </ heap >  
         < form >  ~ (a0 ===  0) </ form > 
         </ config > 
         
 //  post < config >  
                   < env >  a |->  [a0 :  & struct nodeList]  b |->  [?b  :  & struct nodeList] x |->  [?x  :  & struct nodeList] i |->  [?b  :  int] y |->  [?y  :  & struct nodeList] </ env > 
                   < heap >  
                        list(?x )(?X ) 
                        a0 |->  ?v  :  [val :  int ]  (a0 +Int  1) |->  ?x  :  [next :  & struct nodeList] 
                        ?b  |->  ?v  :  [val :  int ]  (?b  +Int  1) |->  0 :  [next :  & struct nodeList] 
                        ?y  |->  ?w  :  [val :  int ]  (?y  +Int  1) |->  0 :  [next :  & struct nodeList]
                        </ heap >  
                   < form >  ([?v ] :::  ?X  ===  A) </ form >  
                   </ config > 
 {
 struct nodeList * b ; 
 int i ; 
 b =  new struct nodeList ; 
  if (a ==  0) 
  {
  i =  0 ; 
   b -> val =  a -> val ; 
   b -> next =  0 ; 
   
   struct nodeList * x ; 
   x =  a -> next ; 
   
   struct nodeList * y ; 
   y =  new struct nodeList ; 
  }
  else
  {
   i =  b ; 
   b -> val =  a -> val ; 
   b -> next =  0 ; 
   
   struct nodeList * x ; 
   x =  a -> next ; 
   
   struct nodeList * y ; 
   y =  new struct nodeList ; 
   }
   return i ; 
 }

) .
endm