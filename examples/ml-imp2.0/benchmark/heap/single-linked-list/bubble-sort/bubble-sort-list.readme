0. Summary
1. Algorithm description
2. Annotation description
3. Observations

1. In order to build linked lists the nodeList structure is defined (val, next). 
The bubble algorithm sorts the list received as argument by interchanging values 
in the list until all the elements are sorted.

2. The precondition: a list beginning at x0 and having the Lcontent must be 
instantiated. 
The postcondition: besides the content of the list nothing else was changed in 
the heap. The new content has the same elements as the initial content, but in 
order.
The first invariant: mentioned that the list has been iterated, its contains 
changed in order, but the set of elements is still the same. If the change 
variable has the 0 value, then the entire content of the list is sorted, 
otherwise the list content still needs to be sorted.
The second invariant states that the list is iterated using the r (and p) 
painters. The heap that used to be a list is now divided into a list segment, an 
intermediate pointer (node of a list) and the rest of the (original) list. All 
these elements (appended) make up the original list. The same condition applies 
over c re regarding the content of the list segment appended to the value *p. If 
c is still 1 then the list is not fully sorted.
The main function creates a list calls the function and checks the result.

The last comments of the file contain declarations that are used by the tool.
