// Author:Rosemary Monahan
// 13 Mar 2007
// The minimum Seqment Sum (A Method of Programming, Dijkstra & Feijen)

//triple quantifed version
// goes through without the new trigger for the split-range axiom

using Microsoft.Contracts;

public class C {

  public static void Main() {
    int[] a = new int[] { 4, 0, 12, 64, -10, 20 };
    int s = MinSum(a);
    System.Console.WriteLine("The sum is {0}", s);
  }
   public static int MinSum(int[]! b)
   ensures result ==  min{int j in (0..b.Length); min{int i in (0..j); sum{int k in (i:j);b[k]}}};    
  {
    int y = 0;
    int x = 0;
    int n = 0;
    while ( n < b.Length)
    invariant 0<= n && n <= b.Length;
    invariant x == min{int j in (0..n); min{int i in (0..j); sum{int k in (i:j);b[k]}}};  
    invariant y == min{int i in (0..n); sum{int k in (i:n);b[k]}};
    { 
      y += b[n]; 
      
      if (y>=0) //y is the min seq sum that we are calculating
      {
        y = 0;
      }
      else 
	    {  
	      if (x >y) // x is the min seq sum to date
	      {  x = y;
	      }
	    } 
	    n++;
  	}  
    return x;
  }
  
  }
