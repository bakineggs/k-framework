0. Summary
1. Algorithm description
2. Annotation description
3. Observations

1. In order to build binary search trees the treeNode structure is defined 
(val, *left, *right).
The "newNode" function gets an int as argument and returns a pointer to the 
treeNode struct. It creates a new treeNode with the val field set to the "v" 
value(function's argument).
The "insert" function goes through the tree and appends to it a node with the 
"v" value. The tree is iterated by comparing the value that needs to be inserted 
with the values stored in the nodes. 
The "find" function goes through the t tree and searches for the v value by 
comparing the value that is being sought with the values stored in the tree's 
nodes.

2. The precondition of the insert function links the t and the v variables to 
the ?root location and the v0 value. The ?root is the location where the tree 
starts. The heap cells states that T is the content of the tree. A constriction 
is set in teh form cell: the content of the tree has the appropiate proprieties 
to be the content of a binary search tree.
The postcondition states that, without caring of the content of the env cell, 
the heap still contains a tree starting at the ?root location and having the ?T 
content, leaving the rest of the existing heap(H) untouched. The form has 
conditions set over the content ?T, the set of elements that make up ?T is the 
same as the set of elements of the initial content and the new value. Moreover, 
the new content still has every property that makes it the content of a binary 
search tree. Also, the function returns the location that represent the root of 
the tree.
The precondition for the find function is the same with theprecondition of the 
insert function. 
The postcondition states that the environment is irrelevant, that the tree that 
existed before the function was called is unaltered after the function call and 
that the content of the tree is truly the content of a binary search tree. The 
form cell separates the cases. The success case states that the return value in 
not 0 and that the v0 value is found in the set of values that correspond to the 
tree content. The failure case states that the return value is 0 and that the 
value could not be found.

The last comments of the file contain declarations that are used by the tool.