load ../../k-prelude
load ml-imp.maude
load fol.maude

mod TEST is inc IMP + FOL= .
ops t v x iterx found value : -> Id .
ops ?n ?root ?ix ?v ?n ?found : -> ?Int .
ops x0 val0 : -> FreeInt .
ops ?rho : -> ?MapItem .
ops h0 : -> FreeMapItem .
ops ?T : -> ?Tree .
ops Tree : -> FreeTree .
ops ?A ?A' : -> ?Seq .
op A : -> FreeSeq .
endm 

set print attribute on .


search
  < config >
   < form > ~(x0 === 0) /\ ~(A === epsilon) </ form >
   < subst > .Subst </ subst >
   < env > value |-> val0 found |-> 0 iterx |-> x0 x |-> x0 </ env >
   < heap > list(x0)(A) </ heap >
   </ config >
 ===>
< config > 
    < env >
    iterx |-> ?ix x |-> x0 found |-> ?found value |-> val0 
    </ env >
    < heap >
    lseg(x0,?ix)(?A)
    ?ix |-> ?v : (nodeList . val)
    ?ix +Int 1 |-> ?n : (nodeList . next)
    list(?n)(?A')
    </ heap >
    < form > A === (?A @ [?v] @ ?A') </ form >
</ config >
=>* < config > < form > F:Formula </ form > CfgItems:Bag </ config > .
---=>* CfgItems:Bag .
