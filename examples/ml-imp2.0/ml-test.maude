load ../../k-prelude
load ml-imp.maude
load fol.maude

mod TEST is inc IMP + FOL= .
ops p y t v x n val iterx found value : -> Id .
ops ?n ?root ?ix ?u ?v ?n ?found ?x ?p ?y ?hd ?tl ?smth : -> ?Int .
ops x0 val0 : -> FreeInt .
ops ?rho : -> ?MapItem .
ops h0 : -> FreeMapItem .
ops ?T : -> ?Tree .
ops Tree : -> FreeTree .
ops ?A ?A' ?B ?C ?LB ?LC : -> ?Seq .
ops A LA  : -> FreeSeq .
op H : -> FreeMapItem .
op ?H : -> ?MapItem .
op C : FreeBagItem .
op ?C : ?BagItem .
endm 

set print attribute on .



search
  < config >
< form > returns x0 /\ ~ (0 === x0) </ form >
   < subst > (A <- epsilon) ; (FreeInt(7) <- 0) ; (FreeInt(8) <- 0) </ subst >
   < stack > (.).List </ stack >
   < env > (.).Map </ env >
   < heap > H x0 |-> FreeInt(4) : (nodeQueue . head) FreeInt(4) |-> val0 : (
    nodeList . val) x0 +Int 1 |-> FreeInt(4) : (nodeQueue . tail) 1 +Int
    FreeInt(4) |-> FreeInt(6) : (nodeList . next) </ heap >
   < tenv > (.).Map </ tenv >
   </ config >
 ===>
< config > C
     < form > TrueFormula </ form >
     < env > ?rho </ env >
     < heap > ?H lseg(?u,?v)([val0]) </ heap >
</ config >
=>* < config > < form > F:Formula </ form > CfgItems:Bag </ config > .
---=>* CfgItems:Bag .
