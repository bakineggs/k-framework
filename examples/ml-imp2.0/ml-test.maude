load ../../k-prelude
load ml-imp.maude
load fol.maude

mod TEST is inc IMP + FOL= .
ops p y t v x n val iterx found value : -> Id .
ops ?n ?root ?ix ?u ?v ?n ?found ?x ?p ?y : -> ?Int .
ops x0 val0 : -> FreeInt .
ops ?rho : -> ?MapItem .
ops h0 : -> FreeMapItem .
ops ?T : -> ?Tree .
ops Tree : -> FreeTree .
ops ?A ?A' ?B ?C ?LB ?LC : -> ?Seq .
ops A LA  : -> FreeSeq .
op H : -> FreeMapItem .
op C : FreeBagItem .
endm 

set print attribute on .



search
  < config >
  < form > TrueFormula </ form > 
   < subst > .Subst </ subst > 
   < stack > callContext(('/*@`assert_*/).KProperLabel(wbag 
    < config > C 
     < form > returns ?n </ form > 
     < env > ?rho </ env > 
     < heap > H lseg(?n,?u)([val0]) </ heap > </ config >(.List{K})),.,.) </
    stack > 
   < env > val |-> val0 n |-> skolem(6, ?n) </ env > 
   < heap > H 1 +Int skolem(6, ?n) |-> skolem(6, ?u) : (nodeList . next)
    skolem(6, ?n) |-> val0 : (nodeList . val) </ heap > 
   < tenv > val |-> int n |-> struct nodeList * </ tenv >
   </ config >
 ===>
< config > C 
     < form > TrueFormula </ form > 
     < env > val |-> val0 n |-> ?n </ env > 
     < heap > H lseg(?n,?u)([val0]) </ heap > </ config >
---=>* < config > < form > F:Formula </ form > CfgItems:Bag </ config > .
=>* CfgItems:Bag .
