load core-theory.maude


mod SUBST is inc MATHEMATICAL-INT + K-TECHNIQUE .
  sort SubstItem Subst .
  subsorts SubstItem < Subst .
  op .Subst : -> Subst .
  op _;_ : Subst Subst -> Subst [assoc comm id: .Subst] .
  op _<-_ : MathObj++ MathObj++ -> SubstItem .
  op _<-_ : List List -> SubstItem .
  op _<-_ : Bag Bag -> SubstItem .
  op _<-_ : Set Set -> SubstItem .
  op _<-_ : Map Map -> SubstItem .
  op _<-_ : List{MathObj++} List{MathObj++} -> Subst .
  op _[_] : Bag Subst -> Bag [prec 0 strat(2 0)] .
  op _[_] : Formula Subst -> Formula [prec 0 strat(2 0)] .
  op _[_] : Subst Subst -> Subst [prec 0 strat(2 0)] .

  vars Obj1 Obj2 Obj1' Obj2' : MathObj++ .
  var ObjList ObjList' : List{MathObj++} .
  eq (Obj1, Obj2, ObjList) <- (Obj1', Obj2', ObjList')
   = (Obj1 <- Obj1') ; (Obj2 <- Obj2') ; (ObjList <- ObjList') .
  eq .List{MathObj++} <- .List{MathObj++} = .Subst .
endm


mod CONFIG is inc MATHEMATICAL-INT + SUBST + PL-ID + PL-QID .
  sorts ?Map !Map FreeMap .
  subsort ?Map !Map FreeMap < Map .
  op ?Env : Nat -> ?Map .
  op ?Heap : Nat -> ?Map .
  op skolem : Nat ?Map -> FreeMap .

  subsort MathObj++ < Builtins KResult .
  subsort Int++ < Builtins KResult .
  ---subsort Id < KProper .
  ---subsort List{MathObj++} < KResult .

 
  op <_>_</_> : CellLabel Formula CellLabel -> BagItem
  [prec 0 format(nib g b o+ -b g b o)] .
  op <_>_</_> : CellLabel Subst CellLabel -> BagItem
  [prec 0 format(nib g b o+ -b g b o)] .

  ops feasible infeasible : -> CellLabel .
  ops config k env heap form subst newSym newImpl : -> CellLabel .

  op errorBag : -> [Bag] .
  op _===>_ : Bag Bag -> Bag [frozen] .
  op skolemize : Nat Bag -> Bag [strat(0)] .
  op _=subst=>_ : Bag Bag -> Bag [format(ni nr! o nini) strat(1 2 0) frozen] .
  op _=skol=>_  : Bag Bag -> Bag [format(ni nr! o nini) strat(1 2 0) frozen] .
  op _=env=>_   : Bag Bag -> Bag [format(ni nr! o nini) strat(1 2 0) frozen] .
  op _=heap=>_  : Bag Bag -> Bag [format(ni nr! o nini) strat(1 2 0) frozen] .
  op _=form=>_  : Bag Bag -> Bag [format(ni nr! o nini) strat(1 2 0) frozen] .
  op _=debug=>_ : Bag Bag -> Bag [format(ni nr! o nini) strat(1 2 0) frozen] .


  op _|->_:_ : Int++ Int++ KLabel -> MapItem .
  op _`(_`)`(_`) : KLabel List{MathObj++} List{MathObj++} -> MapItem .
  op derive : -> KLabel .

  op VALID : Formula -> Bool .
  eq VALID(TrueFormula) = true .

  op IntSort : -> KLabel .
  op _: :_ : Int++ KLabel -> Bool .
endm

mod ML-K is inc CONFIG + K + K-CONDITION-SEARCH .
  op _=>_ : Int++ Int++ -> Int++ [prec 125] .
  op _=>_ : Formula Formula -> Formula [prec 125] .
  op _=>_ : Subst Subst -> Subst [prec 125] .
endm

