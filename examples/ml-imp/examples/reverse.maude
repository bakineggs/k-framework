mod P-LIST-REVERSE is inc IMP-SYNTAX + LIST-HP .
  ops x y p : -> Id .
  ops ?x ?y ?p : -> ?Int .
  ops ?B ?C : -> ?IntSeq .
  op A : -> FreeIntSeq .


  op pListReverse : -> Stmts .
  eq pListReverse = (
    // assume < config > < env > x |-> ?x p |-> ?p y |-> ?y </ env >
                         < heap > list(?x)(A) </ heap > < form > TrueFormula </ form > </ config >
    p = 0 ;
    // invariant < config > < env > p |-> ?p x |-> ?x y |-> ?y </ env >
                            < heap > list(?p)(?B) list(?x)(?C) </ heap >
                            < form > rev(A) === rev(?C) ::: ?B </ form > </ config >
    while(x != 0) {
      y = *(x + 1) ;
      *(x + 1) = p ;
      p = x ;
      x = y ;
    }
    // assert < config > < env > p |-> ?p </ env >
                         < heap > list(?p)(rev(A)) </ heap > < form > TrueFormula </ form > </ config >
  ) .
endm

