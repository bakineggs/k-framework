load fol.maude
load ml-imp.maude

mod TEST is inc IMP + FOL= . 
	      op a :  -> Id .    op b :  -> Id .    op c :  -> Id .    op d :  -> Id .    op res :  -> Id .    op res2 :  -> Id .    op maximum :  -> Id .    op minimum :  -> Id . 
	      op ?res :  -> ?Int .    op ?res2 :  -> ?Int . 
	      op a0 :  -> FreeInt .    op b0 :  -> FreeInt .    op c0 :  -> FreeInt .    op d0 :  -> FreeInt . 
endm

set print attribute on .
rew check('test) .

eof

search
< config >
  < k >('functionEnd).KProperLabel(.List{K}) ~> .K </ k >
  < newSym > 1 </ newSym >
  < newImpl > 0 </ newImpl >
  < struct > (.).Map </ struct >
  < env > res |->[a0 : int] </ env >
  < heap > (.).Map </ heap >
  < form > @ (a0 +Int -Int b0 +Int -1 >=Int 0) /\ returns(a0) </ form >
  < subst > .Subst </ subst > 
</ config > 
===>
< config >
  < k > functionEnd ~> .K </ k >
  < newSym > 1 </ newSym >
  < newImpl > 0 </ newImpl >
  < struct > (.).Map </ struct >
  < env > (.).Map </ env >
  < heap > (.).Map </ heap >
  < form > @ (a0 +Int -Int b0 +Int -1 >=Int 0) /\ returns(a0) </ form >
  < subst > .Subst </ subst > 
</ config > 
=>* CfgItems:Bag
.