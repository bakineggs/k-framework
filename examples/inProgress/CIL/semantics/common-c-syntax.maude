--- mod TEST-ARITH-SYNTAX is
	--- including PL-BOOL .
	--- including PL-EXT-BOOL .
	--- including PL-NAT .
	--- including PL-INT .
	--- including PL-RAT .
	--- including PL-FLOAT .
	--- including PL-STRING .
	--- including PL-CONVERSION .
	--- including PL-QID .
	--- including PL-RANDOM .
	--- including PL-ID .
	
	--- ops N M : -> NzNat .
	--- op B : -> Bool .
	--- --- 
	--- eq N = sNat(N) .
	--- eq N = N +Nat M .
	--- eq N = N *Nat M .
	--- eq N = N /Nat M .
	--- eq N = N %Nat M .
	--- eq N = N ^Nat M .
	--- eq N = N xorNat M .
	--- eq N = N &Nat M .
	--- eq N = N |Nat M .
	--- eq N = N >>Nat M .
	--- eq N = N <<Nat M .
	--- eq B = N <Nat M .
	--- eq B = N <=Nat M .
	--- eq B = N >Nat M .
	--- eq B = N >=Nat M .
	--- eq B = N dividesNat M .
	
	--- ops I J : -> NzInt .
	--- --- 
	--- eq N = -Int N .
	--- eq N = N +Int M .
	--- eq N = N -Int M .
	--- eq N = N *Int M .
	--- eq N = N /Int M .
	--- eq N = N %Int M .
	--- eq N = N ^Int M .
	--- eq N = absInt(N) .
	--- eq N = N xorInt M .
	--- eq N = ~Int(N) .
	--- eq N = N &Int M .
	--- eq N = N |Int M .
	--- eq N = N >>Int M .
	--- eq N = N <<Int M .
	--- eq B = N <Int M .
	--- eq B = N <=Int M .
	--- eq B = N >Int M .
	--- eq B = N >=Int M .
	--- eq B = N dividesInt M .
	--- eq B = N ==Int M .
	--- eq B = N !=Int M .
	
--- endm

mod COMMON-C-SYNTAX is
	including PL-BOOL .
	including PL-EXT-BOOL .
	including PL-NAT .
	including PL-INT .
	including PL-RAT .
	including PL-FLOAT .
	including PL-STRING .
	including PL-CONVERSION .
	including PL-QID .
	including PL-RANDOM .
	including PL-ID .
	
	sort Program .
	
	op loc : Nat Nat -> Nat .
	
	op NULL : -> Id .
	op calloc : -> Id .
	op cos : -> Id .
	op sin : -> Id .
	op exit : -> Id .
	op free : -> Id .
	op main : -> Id .
	op malloc : -> Id .
	op printf : -> Id .
	op putchar : -> Id .
	op rand : -> Id .
	op sqrt : -> Id .
	op abort : -> Id .
	op debug : -> Id .
	op getchar : -> Id .
	op exp : -> Id .
	op log : -> Id .
	op atan : -> Id .
	op File-Scope : -> Id .
	
	op fslOpenFile : -> Id .
	op fslCloseFile : -> Id .
	op fslFGetC : -> Id .
	op fslPutc : -> Id .
	
	op longjmp : -> Id .
	op setjmp : -> Id .
	op floor : -> Id .
	op tan : -> Id .
	op fmod : -> Id .
	op atan2 : -> Id .
	op asin : -> Id .
	
	op spawn : -> Id .
	op sync : -> Id .
	op lock : -> Id .
	op unlock : -> Id .
	
	
	
	---- A.1.5 Constants
	--- 6.4.4
	sort Constant .
	--- subsort Integer-Constant Character-Constant Enumeration-Constant < Constant .
	subsort Integer-Constant Floating-Constant < Constant .
	
	--- 6.4.4.1
	sort Integer-Constant .
	subsort Int < Integer-Constant .
	op @U : Integer-Constant -> Integer-Constant .
	op @L : Integer-Constant -> Integer-Constant .
	op @UL : Integer-Constant -> Integer-Constant .
	op @LL : Integer-Constant -> Integer-Constant .
	op @ULL : Integer-Constant -> Integer-Constant .
	
	op hex : String -> Integer-Constant .

	
	--- subsort Decimal-Constant < Integer-Constant .
	--- Octal-Constant Hexadecimal-Constant 
	--- TODO
	
	--- sort Decimal-Constant .
	--- subsort Int < Decimal-Constant .
	--- TODO
	
	--- sort Octal-Constant .
	--- TODO
	
	--- sort Hexadecimal-Constant .
	--- TODO
	
	--- TODO
	
	--- 6.4.4.2
	sort Floating-Constant .
	subsort Float < Floating-Constant .
	--- subsort Decimal-Floating-Constant Hexadecimal-Floating-Constant < Floating-Constant .
	op @F : Floating-Constant -> Floating-Constant .
	op @L : Floating-Constant -> Floating-Constant .
	
	--- sort Decimal-Floating-Constant .
	--- TODO
	
	--- sort Hexadecimal-Floating-Constant .
	--- TODO
	
	--- TODO
	
	--- 6.4.4.3
	--- sort Enumeration-Constant .
	--- subsort Id < Enumeration-Constant .
	
	--- 6.4.4.4
	--- sort Character-Constant .
	--- TODO
	
	--- 6.4.5
	sort String-Literal .
	subsort String < String-Literal .
	--- TODO
	
	--- TODO
	
	---- A.2.1 Expressions
	--- 6.5.1
	subsort Id Constant String-Literal < Expression .
	
	--- 6.5.2
	op _`[_`] : Expression Expression -> Expression [prec 21] .
	--- op _`(_`) : Postfix-Expression List{Assignment-Expression} -> Postfix-Expression [strict renameTo apply] .
	---op _`(_`) : Expression Expression-List -> Expression .
	
	--- these should be strict but doesn't quite do the right thing
	op Apply : Expression List{Expression} -> Expression .
	op Apply : Expression -> Expression .
	op _._ : Expression Id -> Expression [prec 21] . --- not strict in 1 because of _._ and arrays
	op _->_ : Expression Id -> Expression [prec 21 metadata "strict(1) latex(renameTo _\\texttt{-\\kern-1pt\\textgreater}_)"] .
	op _++ : Expression -> Expression [prec 21 metadata "latex(renameTo _\\texttt{++})"] .
	op _-- : Expression -> Expression [prec 21 metadata "strict(1) latex(renameTo _\\texttt{-}\\texttt{-})"] .

	sort List{Expression} .
	subsort Expression < List{Expression} .
	op .List{Expression} : -> List{Expression} [metadata "latex(renameTo \\ensuremath{\\kdot})"] .
	op _.,._ : List{Expression} List{Expression} -> List{Expression} [assoc metadata "strict hybrid latex(renameTo _,_)" id: .List`{Expression`}] .

	--- 6.5.3
	--- sizeof, &, ++, ., --, and all assignment operators are NOT STRICT
	--- C99 6.3.2.1
	ops ++_ : Expression -> Expression [prec 22 metadata "latex(renameTo \\texttt{+}\\texttt{+}_)"] .
	ops --_ : Expression -> Expression [prec 22 metadata "latex(renameTo \\texttt{-}\\texttt{-}_)"] .
	op &_ : Expression -> Expression [prec 22 metadata "latex(renameTo \\ensuremath{\\&}_)"] .
	---op *_ : Expression -> Expression [prec 22] .
	op Deref : Expression -> Expression [metadata "strict latex(renameTo *_)"] .
	---op +_ : Expression -> Expression [prec 22] .
	op -un_ : Expression -> Expression [prec 22 metadata "strict latex(renameTo \\ensuremath{-{}}_)"] .
	op ~_ : Expression -> Expression [prec 22 metadata "strict latex(renameTo {\\raise.17ex\\hbox{$\\scriptstyle\\sim$}}_)"] .
	op !_ : Expression -> Expression [prec 22 metadata "strict"] .
	op sizeof : Expression -> Expression .
	
	--- 6.5.4
	op Cast : Type-Name Expression -> Expression [metadata "strict"] .
	ops _*_ _/_ _%_ : Expression Expression -> Expression [prec 31 gather(E e) metadata "strict"] .	
	ops _+_ : Expression Expression -> Expression [prec 33 gather(E e) metadata "strict latex(renameTo _\\ensuremath{{}+{}}_)"] .
	ops _-_ : Expression Expression -> Expression [prec 33 gather(E e) metadata "strict latex(renameTo _\\ensuremath{{}-{}}_)"] .	--- latex(renameTo _\texttt{-}_)
	ops _<<_ : Expression Expression -> Expression [prec 35 gather(E e) metadata "strict latex(renameTo _\\texttt{<<}_)"] .
	ops _>>_ : Expression Expression -> Expression [prec 35 gather(E e) metadata "strict"] .
	ops _<_ : Expression Expression -> Expression [prec 37 gather(E e) metadata "strict"] .
	ops _>_ : Expression Expression -> Expression [prec 37 gather(E e) metadata "strict"] .
	ops _<=_ : Expression Expression -> Expression [prec 37 gather(E e) metadata "strict"] .
	ops _>=_ : Expression Expression -> Expression [prec 37 gather(E e) metadata "strict"] .
	ops _==_ : Expression Expression -> Expression [prec 39 gather(E e) metadata "strict"] .
	ops _!=_ : Expression Expression -> Expression [prec 39 gather(E e) metadata "strict"] .
	op _&binop_ : Expression Expression -> Expression [prec 41 gather(E e) metadata "strict latex(renameTo _\\&_)"] .
	op _^_ : Expression Expression -> Expression [prec 43 gather(E e) metadata "strict"] .
	op _|_ : Expression Expression -> Expression [prec 45 gather(E e) metadata "strict"] .
	--- op _&&_ : Expression Expression -> Expression [prec 47 gather(E e) metadata "strict(1) latex(renameTo _\\&\\&_)"] .
	--- op _||_ : Expression Expression -> Expression [prec 49 gather(E e) metadata "strict(1)"] .
	--- op _?_:_ : Expression Expression Expression -> Expression [prec 51 gather(e & E)] .
	
	--- 6.5.16
	ops _*=_ : Expression Expression -> Expression [prec 53] .
	ops _/=_ : Expression Expression -> Expression [prec 53] .
	ops _%=_ : Expression Expression -> Expression [prec 53] .
	ops _+=_ : Expression Expression -> Expression [prec 53] .
	ops _-=_ : Expression Expression -> Expression [prec 53] .
	ops _<<=_ : Expression Expression -> Expression [prec 53] .
	ops _>>=_ : Expression Expression -> Expression [prec 53] .
	ops _^=_ : Expression Expression -> Expression [prec 53] .
	ops _|=_ : Expression Expression -> Expression [prec 53] .
	ops _&binop=_ : Expression Expression -> Expression [prec 53 metadata "latex(renameTo _\\ensuremath{\\&=}_)"] .
	--- op _=_ : Unary-Expression Assignment-Expression -> Assignment-Expression .
	op _:=_ : Expression Expression -> Expression [prec 53 metadata "strict(2) latex(renameTo _\\ensuremath{=}_)"] .
			
	--- 6.5.17
	sort Expression .
	
	---- A.2.2 Declarations
	--- 6.7
	sort Declaration .
	---op Actual-Declaration : Declaration -> Declaration [metadata "strict"] .
	op Local : Declaration -> Declaration [metadata "strict"] .
	op Declaration : SeqList -> Declaration [metadata "strict"] .
	op Declaration : SeqList Init-Declarator-List -> Declaration [metadata "strict(1)"] .
	op Typedef : SeqList Declarator -> Declaration [metadata "strict(1)"] .
	
	sort Init-Declarator-List .
	subsort Init-Declarator < Init-Declarator-List .
	subsort Init-Declarator < Block-Item .

	---subsort Type-Specifier Type-Qualifier Function-Specifier < Declaration-Specifiers .
	---subsort Storage-Class-Specifier Type-Specifier < Declaration-Specifiers .
	subsort Type-Specifier Storage-Class-Specifier < SeqList .
	
	sort Init-Declarator .

	subsort Declarator < Init-Declarator .
	op _=_ : Declaration Expression -> Init-Declarator [metadata "strict(1)"] .
	op _=`{_`} : Declaration List{Expression} -> Init-Declarator [metadata "strict(1) latex(renameTo _\\ensuremath{=\\{_\\}})"] .
	
	--- 6.7.1
	sort Storage-Class-Specifier .
	ops typedef extern static auto register : -> Storage-Class-Specifier .
	--- op inline : -> Storage-Class-Specifier . --- nonstandard

	--- 6.7.2
	sort Type-Specifier .
	sort Base-Type .
	subsort Typedef-Name Struct-Or-Union-Specifier Enum-Specifier Base-Type < Type-Specifier .
	op typedefName : Id -> Typedef-Name .
	ops void 
		no-type
		float 
		double
		long-double
		short-int unsigned-short-int
		char unsigned-char signed-char 
		int unsigned-int
		short unsigned-short
		long-int unsigned-long-int
		long unsigned-long
		long-long unsigned-long-long
		long-long-int unsigned-long-long-int
		: -> Base-Type .
	op Pointer : Type-Specifier -> Type-Specifier [metadata "strict(1)"] . 
	
	----ops `_Bool `_Complex : -> Type-Specifier .
	--- TODO
	
	--- 6.7.2.1
	sort Struct-Or-Union-Specifier .
	--- Note: CIL gives names to all anonymous struct/unions
	---op struct`{_`} : SeqList -> Struct-Or-Union-Specifier .
	---op union`{_`} : Struct-Declaration-List -> Struct-Or-Union-Specifier .
	
	op structDef : Id List{Parameter} -> Struct-Or-Union-Specifier [metadata "strict(2)"] .
	op unionDef : Id List{Parameter} -> Struct-Or-Union-Specifier [metadata "strict(2)"] .
	op structDef : Id -> Struct-Or-Union-Specifier .
	op unionDef : Id -> Struct-Or-Union-Specifier .	
	op struct : Id -> Struct-Or-Union-Specifier .
	op union : Id -> Struct-Or-Union-Specifier .
		
	sort Struct-Declaration .
	op Field : SeqList Declarator -> Struct-Declaration [metadata "strict(1)"].
	subsort Struct-Declaration < List{Parameter} .
	
	subsort Type-Specifier < SeqList .

	--- sort Struct-Declarator .
	--- TODO subsort Declarator < Struct-Declarator .
	--- op :_ : Constant-Expression -> Struct-Declarator .
	--- op _:_ : Declarator Constant-Expression -> Struct-Declarator .
	
	--- 6.7.2.2
	sort Enum-Specifier .
	--- Note: CIL gives names to anonymous enums
	--- op enum`{_`} : Enumerator-List -> Enum-Specifier .
	---op enum_`{_`} : Id List{Expression} -> Enum-Specifier .
	op enum : Id List{Expression} -> Enum-Specifier .
	--- op enum`{_`,`} : Enumerator-List -> Enum-Specifier .
	--- op enum_`{_`,`} : Identifier Enumerator-List -> Enum-Specifier .
	---op enum_ : Id -> Enum-Specifier .
	op enum : Id -> Enum-Specifier .
	
	--- 6.7.3
	--- sort Type-Qualifier .
	--- ops const restrict volatile : -> Type-Qualifier .
	
	---6.7.4
	--- sort Function-Specifier .
	--- op inline : -> Function-Specifier .
	
	--- 6.7.5
	sort Declarator .

	sort Direct-Declarator .

	subsort Direct-Declarator < Declarator .
	subsort Direct-Declarator < Expression .

	subsort Type-Specifier < Direct-Declarator .

	subsort Id < Direct-Declarator .
	op Pointer : Direct-Declarator -> Direct-Declarator [metadata "strict(1)"] .
	op Pointer : Direct-Declarator Direct-Declarator -> Direct-Declarator [metadata "strict(1)"] .
	op Pointer`(`) : -> Direct-Declarator .
	--- op _`[`] : Declarator -> Declarator .
	op _`[_`] : Direct-Declarator Expression -> Direct-Declarator [ditto] .
	--- op _`[__`] : Declarator Type-Qualifier-List Assignment-Expression -> Declarator .
	--- op _`[static_`] : Declarator Assignment-Expression -> Declarator .
	--- op _`[static__`] : Declarator Type-Qualifier-List Assignment-Expression -> Declarator .
	--- op _`[_static_`] : Declarator Type-Qualifier-List Assignment-Expression -> Declarator .
	--- op _`[*`] : Declarator -> Declarator .
	--- op _`[_*`] : Declarator Type-Qualifier-List -> Declarator .
	--- op _`(_`) : Direct-Declarator Parameter-Type-List -> Direct-Declarator . --- Ex: main(void)
	op Direct-Function-Declarator : Direct-Declarator Parameter-Type-List -> Direct-Declarator .
	op Direct-Function-Declarator : Parameter-Type-List -> Direct-Declarator .
	op BitField : Expression -> Direct-Declarator .
	op BitField : Declarator Expression -> Direct-Declarator .
	
	sort Parameter-Type-List .
	sort List{Parameter} .
	subsort Parameter-Declaration < List{Parameter} .
	op .List{Parameter} : -> List{Parameter} [metadata "latex(renameTo \\ensuremath{\\kdot})"] .
	op _,.,_ : List{Parameter} List{Parameter} -> List{Parameter} [assoc id: .List`{Parameter`} metadata "strict hybrid latex(renameTo _,_)"] .
	op Parameter-Type-List : List{Parameter} -> Parameter-Type-List [metadata "strict"] .
	op Parameter-Type-List`(`) : -> Parameter-Type-List .

	sort Parameter-Declaration .
	op Pointer : SeqList -> SeqList .
	op ... : -> Parameter-Declaration [metadata "latex(renameTo \\ensuremath{\\ldots})"] .
	
	--- fixme
	--- same label, two different strictnesses
	op Parameter-Declaration : SeqList -> Parameter-Declaration [metadata "strict"] .
	op Parameter-Declaration : SeqList Declarator -> Parameter-Declaration [metadata "strict(1)"] .
	
	--- 6.7.6
	sort Type-Name .
	subsort SeqList < Type-Name .
	sort SeqList .
	op __ : SeqList SeqList -> SeqList [prec 85] .
	subsort Declarator < SeqList .
	
	--- 6.7.7
	sort Typedef-Name .
	
	--- 6.7.8
	op Initializer : Expression -> Expression .
	op InitList : List{Expression} -> Expression .
	op InitItem : Expression -> Expression .
	--- op `{_`,`} : Initializer-List -> Initializer .
	---op _,_ : Initializer-List Initializer-List -> Initializer-List [assoc] .
	
	--- sort Designation .
	--- op _= : Designator-List -> Designation .
	op Designation : Expression Expression -> Expression .
	--- sort Designator-List .
	--- TODO subsort Designator < Designator-List .
	--- TODO op __ : Designator-List Designator -> Designator-List .
	
	--- sort Designator .	
	--- op `[_`] : Constant-Expression -> Designator .
	--- op ._ : Identifier -> Designator .
	op ArrayDesignator : Expression -> Expression .
	op FieldDesignator : Id -> Expression .
	
	---- A.2.3 Statements
	--- 6.8
	sort Statement .
	
	subsort Labeled-Statement Jump-Statement Compound-Statement Iteration-Statement Expression-Statement Selection-Statement < Statement .
		
	--- 6.8.1
	sort Labeled-Statement .
	op _:_ : Id SeqList -> Labeled-Statement .
	op case`(_`)_:_ : Nat Expression SeqList -> Labeled-Statement [metadata "strict(2)"] .
	op default`(_`):_ : Nat SeqList -> Labeled-Statement .
	
	--- 6.8.2
	sort Compound-Statement .

	op Block : SeqList -> Compound-Statement .
	op Block`(`) : -> Compound-Statement .

	subsort Block-Item < SeqList .
	sort Block-Item .
	
	subsort Statement < Block-Item .
	subsort Declaration < Block-Item .
	---op _; : Declaration -> Block-Item [prec 75 metadata "strict"] .
	
	--- 6.8.3
	sort Expression-Statement .
	op EmptyStatement`; : -> Expression-Statement .	
	op _; : Expression -> Expression-Statement [prec 75 metadata "strict"] .
	
	--- 6.8.4
	sort Selection-Statement .

	op if`(_`)_ : Expression Statement -> Selection-Statement [metadata "strict(1)"] .
	op if`(_`)_else_ : Expression Statement Statement -> Selection-Statement [metadata "strict(1)"] .
	op switch`(_`)`(_`)_ : Nat Expression Statement -> Selection-Statement [metadata "strict(2)"] .
	
	--- 6.8.5
	sort Iteration-Statement .

	op while`(_`)_ : Expression Statement -> Iteration-Statement .

	--- 6.8.6
	sort Jump-Statement .

	op goto_; : Id -> Jump-Statement [metadata "latex(renameTo goto_)"] .
	--- op continue`; : -> Jump-Statement [format (ni o o) metadata "latex(renameTo continue)"] .
	op break`; : -> Jump-Statement [format (ni o o) metadata "latex(renameTo break)"] .
	op return`; : -> Jump-Statement [metadata "latex(renameTo return)"] .
	op return_; : Expression -> Jump-Statement [metadata "strict latex(renameTo return_)"] .
	
	---- A.2.4 External definitions
	--- 6.9
	---sort Translation-Unit .
	subsort SeqList < Program .

	sort External-Declaration .
	subsort External-Declaration < SeqList .

	subsort Function-Definition < External-Declaration .
	op Global : SeqList -> External-Declaration [metadata "strict"] .
	op Global`(`) : -> External-Declaration .
	
	--- 6.9.1
	sort Function-Definition .
	
	--- Note: Totally made up to help parsing
	op _`{_`} : Declaration SeqList -> Function-Definition [prec 70 format (ni o++ no --in d) metadata "strict(1) latex(renameTo _\\ensuremath{\\{_\\}})"] .
endm
