load ../../../tools/../k-prelude

mod SKEME is including K-DESTRUCTORS .
including K-POLYMORPHIC-VARIABLES .
including K-TECHNIQUE .
including K-WHERE .
including PL-BOOL .
including PL-FLOAT .
including PL-ID .
including PL-INT .
including PL-RAT .
including PL-STRING .
including K-PROPER .
including K-WRAPPERS-LABELS .
including MAUDE-IF-THEN-ELSE .
including K-STRICTNESS .
subsort Char < Builtins .
subsort FiniteFloat < Builtins .
subsort Nat < Rat .
subsort NzInt < Builtins .
subsort NzInt < Rat .
subsort NzNat < Builtins .
subsort NzNat < Int .
subsort NzNat < NzRat .
subsort NzNat < Rat .
subsort NzRat < Builtins .
subsort PosRat < Builtins .
subsort PosRat < Rat .
subsort Zero < Builtins .
subsort Zero < Int .
subsort Zero < Rat .
op * : -> Id .
op + : -> Id .
op - : -> Id .
op / : -> Id .
op = : -> Id .
op Bag_ : List{K}-> Bag .
op KLtoL : List{K}-> List .
op List_ : List{K}-> List .
op T : -> CellLabel .
op _in_ : BagItem Bag -> Bool .
op _in_ : K Bag -> Bool .
op _in_ : K Set -> Bool .
op _in_ : SetItem Set -> Bool .
op _|->_ : List{K}List{K}-> Map .
op bar : -> List{K}.
op baz : -> List{K}.
op call-with-current-continuation : -> Id .
op call/cc : -> Id .
op car : -> Id .
op cdr : -> Id .
op chaz : -> List{K}.
op display : -> Id .
op env : -> CellLabel .
op eval : -> Id .
op foo : -> List{K}.
op globalEnv : -> CellLabel .
op if : -> Id .
op inKList : K K -> Bool .
op k : -> CellLabel .
op keys_ : Map -> Set .
op kraz : -> List{K}.
op length : K -> Int .
op lengthList_ : List -> Nat .
op loc : K -> Rat .
op nextLoc : -> CellLabel .
op out`(_`) : List -> Bag .
op output : -> CellLabel .
op program : -> CellLabel .
op quote : -> Id .
op run`(_`) : List{K}-> Bag .
op set-car! : -> Id .
op set-cdr! : -> Id .
op store : -> CellLabel .
op $hasMapping : Map K -> Bool[metadata "latex(renameTo \$hasMapping\mybracket{_,_})"].
op '!_ : -> KProperLabel[metadata "arity 1"].
op '#\_ : -> KProperLabel[metadata "arity 1"].
op '#`[_`] : -> KProperLabel[metadata "arity 1"].
op '#`[`] : -> KProperLabel[metadata "arity 0"].
op '#builtin`(Builtin`) : -> KProperLabel[metadata "arity 0"].
op '#continuation`(Continuation`) : -> KProperLabel[metadata "arity 0"].
op '#f : -> KProperLabel[metadata "arity 0"].
op '#procedure`(Closure`) : -> KProperLabel[metadata "arity 0"].
op '#t : -> KProperLabel[metadata "arity 0"].
op '#unspecified : -> KProperLabel[metadata "arity 0"].
op '__ : -> KHybridLabel[metadata "hybrid"].
op '_`,_ : -> KHybridLabel[metadata "hybrid"].
op '`[_._`] : -> KProperLabel[metadata "arity 2"].
op '`[_`] : -> KProperLabel[metadata "arity 1"].
op '`[`] : -> KProperLabel[metadata "arity 0"].
op 'b* : -> KResultLabel[metadata "arity 0"].
op 'b+ : -> KResultLabel[metadata "arity 0"].
op 'b- : -> KResultLabel[metadata "arity 0"].
op 'b/ : -> KResultLabel[metadata "arity 0"].
op 'bCallCC : -> KResultLabel[metadata "arity 0"].
op 'bCar : -> KResultLabel[metadata "arity 0"].
op 'bCdr : -> KResultLabel[metadata "arity 0"].
op 'bDisplay : -> KResultLabel[metadata "arity 0"].
op 'bEqual : -> KResultLabel[metadata "arity 0"].
op 'bEval : -> KResultLabel[metadata "arity 0"].
op 'bSetCar : -> KResultLabel[metadata "arity 0"].
op 'bSetCdr : -> KResultLabel[metadata "arity 0"].
op 'closure`(List`{Id`}`,List`{Exp`}`,Map`) : -> KProperLabel[metadata "arity 0"].
op 'cons`(_._`) : -> KResultLabel[metadata "arity 2"].
op 'continuation`(K`,Map`) : -> KProperLabel[metadata "arity 0"].
op 'headList`{K`}_ : -> KProperLabel[metadata "arity 1 latex(renameTo head\subscript{{\scriptstyle\it{}List{K}}}mybracket{_})"].
op 'if_$_$_ : -> KProperLabel[metadata "arity 3 strict(1)"].
op 'intern : -> KResultLabel[metadata "arity 1"].
op 'internS : -> KResultLabel[metadata "arity 3"].
op 'internV : -> KResultLabel[metadata "arity 3"].
op 'program`(List`{Exp`}`) : -> KProperLabel[metadata "arity 0"].
op 'string`(_#_`) : -> KResultLabel[metadata "arity 2"].
op 'vF : -> KResultLabel[metadata "arity 0"].
op 'vNil : -> KResultLabel[metadata "arity 0"].
op 'vT : -> KResultLabel[metadata "arity 0"].
op 'vUnspec : -> KResultLabel[metadata "arity 0"].
op 'varClosure`(List`{Id`{`,Id`,List`{Exp`}`,Map`) : -> KProperLabel[metadata "arity 0"].
op 'vc`(_`) : -> KResultLabel[metadata "arity 1"].
op 'vec`(_#_`) : -> KResultLabel[metadata "arity 2"].
op 'vf`(_`) : -> KResultLabel[metadata "arity 1"].
op 'vi`(_`) : -> KResultLabel[metadata "arity 1"].
op 'vn`(_`) : -> KResultLabel[metadata "arity 1"].
op 'vr`(_`) : -> KResultLabel[metadata "arity 1"].
op Float_ : Float -> KProperLabel[metadata "builtin wrapper"].
op Id_ : Id -> KProperLabel[metadata "builtin wrapper"].
op Rat_ : Rat -> KProperLabel[metadata "builtin wrapper"].
op Set_ : List{K}-> Set[metadata "latex(renameTo {\it{}Set}\mybracket{_})"].
op String_ : String -> KProperLabel[metadata "builtin wrapper"].
op _-Bag_ : Bag Bag -> Bag[metadata "latex(renameTo _-\subscript{{\scriptstyle\it{}Bag}}_)"].
op _-Set_ : Set Set -> Set[metadata "latex(renameTo _-\subscript{{\scriptstyle\it{}Set}}_)"].
op _`(_`) : Map K -> K[prec 0].
op _`(_`) : Map List{K}-> List{K}[prec 0].
op _`[_/_`] : Map K K -> Map[prec 0].
op _`[_/_`] : Map List{K}List{K}-> Map[prec 0].
op _`[_`] : Map Map -> Map[prec 0].
op _`[undef/_`] : Map List{K}-> Map[metadata "latex(renameTo _[\ensuremath{\bot\;}/_])"].
op lengthList`{K`}_ : List{K}-> Nat[metadata "latex(renameTo length\subscript{{\scriptstyle\it{}List{K}}}mybracket{_})"].
op tailList`{K`}_ : NeList{K}-> List{K}[metadata "latex(renameTo tail\subscript{{\scriptstyle\it{}List{K}}}mybracket{_})"].
eq bar = _`(_`)('`[_`],_`(_`)('__,_`,`,_(_`(_`)(Id_(if),.List`{K`}),_`,`,_(_`(_`)('#t,.List`{K`}),_`,`,_(_`(_`)(String_("true"),.List`{K`}),_`(_`)('#\_,_`(_`)(String_("f"),.List`{K`}))))))).
eq baz = _`(_`)('#`[_`],_`(_`)('__,_`,`,_(_`(_`)('#`[_`],_`(_`)('__,_`(_`)('#`[_`],_`(_`)('__,_`(_`)(Rat_(3),.List`{K`}))))),_`(_`)(String_("true"),.List`{K`})))).
eq chaz = _`(_`)('`[_`],_`(_`)('__,_`,`,_(_`(_`)(Id_(quote),.List`{K`}),_`(_`)(Id_(if),.List`{K`})))).
eq foo = _`,`,_(_`(_`)('`[_`],_`(_`)('__,_`(_`)(Rat_(3),.List`{K`}))),_`,`,_(_`(_`)('`[_`],_`(_`)('__,_`(_`)(Rat_(4),.List`{K`}))),_`(_`)('`[_`],_`(_`)('__,_`(_`)(Rat_(5),.List`{K`}))))).
eq kraz = _`(_`)('!_,_`(_`)('`[_`],_`(_`)('__,_`,`,_(_`(_`)(Rat_(42),.List`{K`}),_`,`,_(_`(_`)(Rat_(43),.List`{K`}),_`(_`)(Rat_(44),.List`{K`})))))).
eq $hasMapping(__(M:Map,_|->_(D:K,R:K)),D:K)= true .
eq Bag_(.List`{K`})=(.).Bag .
eq Bag_(_`,`,_(K:K,Ks:List{K}))= __(BagItem(K:K),Bag_(Ks:List{K})).
eq KLtoL(.List`{K`})=(.).List .
eq KLtoL(_`,`,_(K:K,KL:List{K}))= __(ListItem(K:K),KLtoL(KL:List{K})).
eq List_(.List`{K`})=(.).List .
eq List_(_`,`,_(K:K,Ks:List{K}))= __(ListItem(K:K),List_(Ks:List{K})).
eq Set_(.List`{K`})=(.).Set .
eq Set_(_`,`,_(K:K,Ks:List{K}))= __(SetItem(K:K),Set_(Ks:List{K})).
eq _-Bag_(.,Bag:Bag)=(.).Bag .
eq _-Bag_(__(Bag:Bag,BagItem:BagItem),Bag':Bag)= if_then_else_fi(_in_(BagItem:BagItem,Bag':Bag),_-Bag_(Bag:Bag,Bag':Bag),__(BagItem:BagItem,_-Bag_(Bag:Bag,Bag':Bag))).
eq _-Set_(.,Set:Set)=(.).Set .
eq _-Set_(__(Set:Set,SetItem:SetItem),Set':Set)= if_then_else_fi(_in_(SetItem:SetItem,Set':Set),_-Set_(Set:Set,Set':Set),__(SetItem:SetItem,_-Set_(Set:Set,Set':Set))).
eq _`(_`)('!_,E:K)= _`(_`)('`[_`],_`(_`)('__,_`,`,_(_`(_`)(Id_(quote),.List`{K`}),E:K))).
eq _`(_`)('#`[_`],_`(_`)('__,.List`{K`}))= _`(_`)('#`[`],.List`{K`}).
eq _`(_`)('`[_._`],_`,`,_(_`(_`)('__,EL:List{K}),_`(_`)('`[_._`],_`,`,_(_`(_`)('__,EL':List{K}),E:K))))= _`(_`)('`[_._`],_`,`,_(_`(_`)('__,_`,`,_(EL:List{K},EL':List{K})),E:K)).
eq _`(_`)('`[_._`],_`,`,_(_`(_`)('__,EL:List{K}),_`(_`)('`[_`],_`(_`)('__,EL':List{K}))))= _`(_`)('`[_`],_`(_`)('__,_`,`,_(EL:List{K},EL':List{K}))).
eq _`(_`)('`[_._`],_`,`,_(_`(_`)('__,EL:List{K}),_`(_`)('`[`],.List`{K`})))= _`(_`)('`[_`],_`(_`)('__,EL:List{K})).
eq _`(_`)('`[_`],_`(_`)('__,.List`{K`}))= _`(_`)('`[`],.List`{K`}).
eq _`(_`)('headList`{K`}_,_`(_`)(kList("wklist_"),_`,`,_(K:K,Ks:List{K})))= K:K .
eq _`(_`)(Map:Map,.List`{K`})= .List`{K`} .
eq _`(_`)(Map:Map,_`,`,_(K1:K,NList1:NeList{K}))= _`,`,_(_`(_`)(Map:Map,K1:K),_`(_`)(Map:Map,NList1:NeList{K})).
eq _`(_`)(__(Map:Map,_|->_(K1:K,K2:K)),K1:K)= K2:K .
eq _`[_/_`](Map:Map,K2:K,_`,`,_(K1:K,NList1:NeList{K}))= _`[_/_`](_`[_/_`](Map:Map,K2:K,K1:K),K2:K,NList1:NeList{K}).
eq _`[_/_`](Map:Map,List:List{K},.List`{K`})= Map:Map .
eq _`[_/_`](Map:Map,_`,`,_(K1:K,NList1:NeList{K}),_`,`,_(K2:K,NList2:NeList{K}))= _`[_/_`](_`[_/_`](Map:Map,K1:K,K2:K),NList1:NeList{K},NList2:NeList{K}).
eq _`[_/_`](__(Map:Map,_|->_(K1:K,K2:K)),K2':K,K1:K)= __(Map:Map,_|->_(K1:K,K2':K)).
eq _`[_`](__(Map:Map,_|->_(K1:K,K2:K)),__(Map':Map,_|->_(K1:K,K2':K)))= __(_|->_(K1:K,K2':K),_`[_`](Map:Map,Map':Map)).
eq _`[undef/_`](Map:Map,.List`{K`})= Map:Map .
eq _`[undef/_`](Map:Map,_`,`,_(K1:K,NList1:NeList{K}))= _`[undef/_`](_`[undef/_`](Map:Map,K1:K),NList1:NeList{K}).
eq _`[undef/_`](__(Map:Map,_|->_(K1:K,K2:K)),K1:K)= Map:Map .
eq _in_(BagItem:BagItem,__(Bag:Bag,BagItem:BagItem))= true .
eq _in_(K:K,__(Bag:Bag,BagItem(K:K)))= true .
eq _in_(K:K,__(Set:Set,SetItem(K:K)))= true .
eq _in_(SetItem:SetItem,__(Set:Set,SetItem:SetItem))= true .
eq _|->_(.List`{K`},List:List{K})=(.).Map .
eq _|->_(_`,`,_(K1:K,NList1:NeList{K}),K2:K)= __(_|->_(K1:K,K2:K),_|->_(NList1:NeList{K},K2:K)).
eq _|->_(_`,`,_(K1:K,NList1:NeList{K}),_`,`,_(K2:K,NList2:NeList{K}))= __(_|->_(K1:K,K2:K),_|->_(NList1:NeList{K},NList2:NeList{K})).
eq inKList(K:K,_~>_(K1:K,_~>_(K:K,K2:K)))= true .
eq keys_(.)=(.).Set .
eq keys_(__(Map:Map,_|->_(K1:K,K2:K)))= __(SetItem(K1:K),keys_(Map:Map)).
eq length(_`(_`)('__,.List`{K`}))= 0 .
eq length(_`(_`)('__,_`,`,_(E:K,EL:List{K})))= _+Int_(1,length(_`(_`)('__,EL:List{K}))).
eq lengthList_(.)= 0 .
eq lengthList_(__(LItem:ListItem,List:List))= sNat_(lengthList_(List:List)).
eq lengthList`{K`}_(.List`{K`})= 0 .
eq lengthList`{K`}_(_`,`,_(K:K,Ks:List{K}))= sNat_(lengthList`{K`}_(Ks:List{K})).
eq run`(_`)(KL:List{K})= <_>_</_>(T,__(<_>_</_>(k,(.).K,k),__(<_>_</_>(nextLoc,_`(_`)(Rat_(12),.List`{K`}),nextLoc),__(<_>_</_>(program,KLtoL(KL:List{K}),program),__(<_>_</_>(output,(.).List,output),__(<_>_</_>(env,(.).Map,env),__(<_>_</_>(globalEnv,__(_|->_(_`(_`)(Id_(eval),.List`{K`}),_`(_`)(Rat_(loc(_`(_`)(Rat_(0),.List`{K`}))),.List`{K`})),__(_|->_(_`(_`)(Id_(display),.List`{K`}),_`(_`)(Rat_(loc(_`(_`)(Rat_(1),.List`{K`}))),.List`{K`})),__(_|->_(_`(_`)(Id_(set-car!),.List`{K`}),_`(_`)(Rat_(loc(_`(_`)(Rat_(2),.List`{K`}))),.List`{K`})),__(_|->_(_`(_`)(Id_(set-cdr!),.List`{K`}),_`(_`)(Rat_(loc(_`(_`)(Rat_(3),.List`{K`}))),.List`{K`})),__(_|->_(_`(_`)(Id_(=),.List`{K`}),_`(_`)(Rat_(loc(_`(_`)(Rat_(4),.List`{K`}))),.List`{K`})),__(_|->_(_`(_`)(Id_(+),.List`{K`}),_`(_`)(Rat_(loc(_`(_`)(Rat_(5),.List`{K`}))),.List`{K`})),__(_|->_(_`(_`)(Id_(-),.List`{K`}),_`(_`)(Rat_(loc(_`(_`)(Rat_(6),.List`{K`}))),.List`{K`})),__(_|->_(_`(_`)(Id_(*),.List`{K`}),_`(_`)(Rat_(loc(_`(_`)(Rat_(7),.List`{K`}))),.List`{K`})),__(_|->_(_`(_`)(Id_(/),.List`{K`}),_`(_`)(Rat_(loc(_`(_`)(Rat_(8),.List`{K`}))),.List`{K`})),__(_|->_(_`(_`)(Id_(call-with-current-continuation),.List`{K`}),_`(_`)(Rat_(loc(_`(_`)(Rat_(9),.List`{K`}))),.List`{K`})),__(_|->_(_`(_`)(Id_(call/cc),.List`{K`}),_`(_`)(Rat_(loc(_`(_`)(Rat_(9),.List`{K`}))),.List`{K`})),__(_|->_(_`(_`)(Id_(car),.List`{K`}),_`(_`)(Rat_(loc(_`(_`)(Rat_(10),.List`{K`}))),.List`{K`})),_|->_(_`(_`)(Id_(cdr),.List`{K`}),_`(_`)(Rat_(loc(_`(_`)(Rat_(11),.List`{K`}))),.List`{K`})))))))))))))),globalEnv),<_>_</_>(store,__(_|->_(_`(_`)(Rat_(loc(_`(_`)(Rat_(0),.List`{K`}))),.List`{K`}),_`(_`)('bEval,.List`{K`})),__(_|->_(_`(_`)(Rat_(loc(_`(_`)(Rat_(1),.List`{K`}))),.List`{K`}),_`(_`)('bDisplay,.List`{K`})),__(_|->_(_`(_`)(Rat_(loc(_`(_`)(Rat_(2),.List`{K`}))),.List`{K`}),_`(_`)('bSetCar,.List`{K`})),__(_|->_(_`(_`)(Rat_(loc(_`(_`)(Rat_(3),.List`{K`}))),.List`{K`}),_`(_`)('bSetCdr,.List`{K`})),__(_|->_(_`(_`)(Rat_(loc(_`(_`)(Rat_(4),.List`{K`}))),.List`{K`}),_`(_`)('bEqual,.List`{K`})),__(_|->_(_`(_`)(Rat_(loc(_`(_`)(Rat_(5),.List`{K`}))),.List`{K`}),_`(_`)('b+,.List`{K`})),__(_|->_(_`(_`)(Rat_(loc(_`(_`)(Rat_(6),.List`{K`}))),.List`{K`}),_`(_`)('b-,.List`{K`})),__(_|->_(_`(_`)(Rat_(loc(_`(_`)(Rat_(7),.List`{K`}))),.List`{K`}),_`(_`)('b*,.List`{K`})),__(_|->_(_`(_`)(Rat_(loc(_`(_`)(Rat_(8),.List`{K`}))),.List`{K`}),_`(_`)('b/,.List`{K`})),__(_|->_(_`(_`)(Rat_(loc(_`(_`)(Rat_(9),.List`{K`}))),.List`{K`}),_`(_`)('bCallCC,.List`{K`})),__(_|->_(_`(_`)(Rat_(loc(_`(_`)(Rat_(10),.List`{K`}))),.List`{K`}),_`(_`)('bCar,.List`{K`})),_|->_(_`(_`)(Rat_(loc(_`(_`)(Rat_(11),.List`{K`}))),.List`{K`}),_`(_`)('bCdr,.List`{K`}))))))))))))),store))))))),T).
eq tailList`{K`}_(_`,`,_(K:K,Ks:List{K}))= Ks:List{K}.
eq $hasMapping(M:Map,D:K)= false[owise].
eq <_>_</_>(T,__(?4:Bag,__(<_>_</_>(k,(.).K,k),__(<_>_</_>(output,L:List,output),<_>_</_>(program,(.).List,program)))),T)= out`(_`)(L:List)[metadata "structural rule"].
eq <_>_</_>(k,_~>_(_`(_`)('#\_,_`(_`)(String_(C:Char),.List`{K`})),?4:K),k)= <_>_</_>(k,_~>_(_`(_`)('vc`(_`),_`(_`)(String_(C:Char),.List`{K`})),?4:K),k)[metadata "structural rule"].
eq <_>_</_>(k,_~>_(_`(_`)('#f,.List`{K`}),?2:K),k)= <_>_</_>(k,_~>_(_`(_`)('vF,.List`{K`}),?2:K),k)[metadata "structural rule"].
eq <_>_</_>(k,_~>_(_`(_`)('#t,.List`{K`}),?2:K),k)= <_>_</_>(k,_~>_(_`(_`)('vT,.List`{K`}),?2:K),k)[metadata "structural rule"].
eq <_>_</_>(k,_~>_(_`(_`)('#unspecified,.List`{K`}),?2:K),k)= <_>_</_>(k,_~>_(_`(_`)('vUnspec,.List`{K`}),?2:K),k)[metadata "structural rule"].
eq <_>_</_>(k,_~>_(_`(_`)('`[_`],_`(_`)('__,_`,`,_(_`(_`)(Id_(if),.List`{K`}),_`,`,_(E1:K,_`,`,_(E2:K,E3:K))))),?8:K),k)= <_>_</_>(k,_~>_(_`(_`)('if_$_$_,_`,`,_(E1:K,_`,`,_(E2:K,E3:K))),?8:K),k)[metadata "structural rule"].
eq <_>_</_>(k,_~>_(_`(_`)('if_$_$_,_`,`,_(Kcxt:KProper,_`,`,_(K2:K,K3:K))),Rest:K),k)= <_>_</_>(k,_~>_(Kcxt:KProper,_~>_(_`(_`)(freezer("'if_$_$_(`[HOLE`]:K,,K2:K,,K3:K)"),_`,`,_(_`(_`)(freezeVar("K2:K"),K2:K),_`(_`)(freezeVar("K3:K"),K3:K))),Rest:K)),k)[metadata "heating"].
eq <_>_</_>(k,_~>_(_`(_`)(Float_(F:Float),.List`{K`}),?4:K),k)= <_>_</_>(k,_~>_(_`(_`)('vf`(_`),_`(_`)(Float_(F:Float),.List`{K`})),?4:K),k)[metadata "structural rule"].
eq <_>_</_>(k,_~>_(_`(_`)(Rat_(I:Int),.List`{K`}),?4:K),k)= <_>_</_>(k,_~>_(_`(_`)('vi`(_`),_`(_`)(Rat_(I:Int),.List`{K`})),?4:K),k)[metadata "structural rule"].
eq <_>_</_>(k,_~>_(_`(_`)(Rat_(R:Rat),.List`{K`}),?4:K),k)= <_>_</_>(k,_~>_(_`(_`)('vr`(_`),_`(_`)(Rat_(R:Rat),.List`{K`})),?4:K),k)[metadata "structural rule"].
eq <_>_</_>(k,_~>_(Kcxt:KResult,_~>_(_`(_`)(freezer("'if_$_$_(`[HOLE`]:K,,K2:K,,K3:K)"),_`,`,_(_`(_`)(freezeVar("K2:K"),K2:K),_`(_`)(freezeVar("K3:K"),K3:K))),Rest:K)),k)= <_>_</_>(k,_~>_(_`(_`)('if_$_$_,_`,`,_(Kcxt:KResult,_`,`,_(K2:K,K3:K))),Rest:K),k)[metadata "cooling"].
eq __(<_>_</_>(k,(.).K,k),<_>_</_>(program,__(ListItem(K:K),?4:List),program))= __(<_>_</_>(k,K:K,k),<_>_</_>(program,?4:List,program))[metadata "structural rule"].
eq __(<_>_</_>(nextLoc,_`(_`)(Rat_(Loc:Rat),.List`{K`}),nextLoc),<_>_</_>(store,__(?13:Map,_|->_(_`(_`)(Rat_(loc(_`(_`)(Rat_(Loc':Rat),.List`{K`}))),.List`{K`}),_`(_`)('intern,_`(_`)('`[_`],_`(_`)('__,_`,`,_(E:K,EL:List{K})))))),store))= __(<_>_</_>(nextLoc,_`(_`)(Rat_(_+Rat_(Loc:Rat,2)),.List`{K`}),nextLoc),<_>_</_>(store,__(?13:Map,__(_|->_(_`(_`)(Rat_(loc(_`(_`)(Rat_(Loc:Rat),.List`{K`}))),.List`{K`}),_`(_`)('intern,E:K)),__(_|->_(_`(_`)(Rat_(loc(_`(_`)(Rat_(Loc':Rat),.List`{K`}))),.List`{K`}),_`(_`)('cons`(_._`),_`,`,_(_`(_`)(Rat_(Loc:Rat),.List`{K`}),_`(_`)(Rat_(_+Rat_(Loc:Rat,1)),.List`{K`})))),_|->_(_`(_`)(Rat_(loc(_`(_`)(Rat_(_+Rat_(Loc:Rat,1)),.List`{K`}))),.List`{K`}),_`(_`)('intern,_`(_`)('`[_`],_`(_`)('__,EL:List{K}))))))),store))[metadata "structural rule"].
eq __(<_>_</_>(nextLoc,_`(_`)(Rat_(Loc:Rat),.List`{K`}),nextLoc),<_>_</_>(store,__(?17:Map,_|->_(_`(_`)(Rat_(loc(_`(_`)(Rat_(Loc':Rat),.List`{K`}))),.List`{K`}),_`(_`)('internV,_`,`,_(_`(_`)('vec`(_#_`),_`,`,_(_`(_`)(wmap_(M:Map),.List`{K`}),_`(_`)(Rat_(?18:Int),.List`{K`}))),_`,`,_(_`(_`)('__,_`,`,_(E:K,EL:List{K})),_`(_`)(Rat_(Pos:Nat),.List`{K`})))))),store))= __(<_>_</_>(nextLoc,_`(_`)(Rat_(_+Rat_(Loc:Rat,1)),.List`{K`}),nextLoc),<_>_</_>(store,__(?17:Map,__(_|->_(_`(_`)(Rat_(loc(_`(_`)(Rat_(Loc:Rat),.List`{K`}))),.List`{K`}),_`(_`)('intern,E:K)),_|->_(_`(_`)(Rat_(loc(_`(_`)(Rat_(Loc':Rat),.List`{K`}))),.List`{K`}),_`(_`)('internV,_`,`,_(_`(_`)('vec`(_#_`),_`,`,_(_`(_`)(wmap_(__(M:Map,_|->_(_`(_`)(Rat_(Pos:Nat),.List`{K`}),_`(_`)(Rat_(loc(_`(_`)(Rat_(Loc:Rat),.List`{K`}))),.List`{K`})))),.List`{K`}),_`(_`)(Rat_(?18:Int),.List`{K`}))),_`,`,_(_`(_`)('__,EL:List{K}),_`(_`)(Rat_(_+Nat_(Pos:Nat,1)),.List`{K`}))))))),store))[metadata "structural rule"].
eq __(<_>_</_>(k,_~>_(?14:K,_~>_(_`(_`)('intern,_`(_`)('`[_`],_`(_`)('__,_`,`,_(E:K,EL:List{K})))),?15:K)),k),__(<_>_</_>(nextLoc,_`(_`)(Rat_(Loc:Rat),.List`{K`}),nextLoc),<_>_</_>(store,?16:Map,store)))= __(<_>_</_>(k,_~>_(?14:K,_~>_(_`(_`)('cons`(_._`),_`,`,_(_`(_`)(Rat_(Loc:Rat),.List`{K`}),_`(_`)(Rat_(_+Rat_(Loc:Rat,1)),.List`{K`}))),?15:K)),k),__(<_>_</_>(nextLoc,_`(_`)(Rat_(_+Rat_(Loc:Rat,2)),.List`{K`}),nextLoc),<_>_</_>(store,__(?16:Map,__(_|->_(_`(_`)(Rat_(loc(_`(_`)(Rat_(Loc:Rat),.List`{K`}))),.List`{K`}),_`(_`)('intern,E:K)),_|->_(_`(_`)(Rat_(loc(_`(_`)(Rat_(_+Rat_(Loc:Rat,1)),.List`{K`}))),.List`{K`}),_`(_`)('intern,_`(_`)('`[_`],_`(_`)('__,EL:List{K})))))),store)))[metadata "structural rule"].
eq __(<_>_</_>(k,_~>_(?18:K,_~>_(_`(_`)('internV,_`,`,_(_`(_`)('vec`(_#_`),_`,`,_(_`(_`)(wmap_(M:Map),.List`{K`}),_`(_`)(Rat_(?19:Int),.List`{K`}))),_`,`,_(_`(_`)('__,_`,`,_(E:K,EL:List{K})),_`(_`)(Rat_(Pos:Nat),.List`{K`})))),?20:K)),k),__(<_>_</_>(nextLoc,_`(_`)(Rat_(Loc:Rat),.List`{K`}),nextLoc),<_>_</_>(store,?21:Map,store)))= __(<_>_</_>(k,_~>_(?18:K,_~>_(_`(_`)('internV,_`,`,_(_`(_`)('vec`(_#_`),_`,`,_(_`(_`)(wmap_(__(M:Map,_|->_(_`(_`)(Rat_(Pos:Nat),.List`{K`}),_`(_`)(Rat_(loc(_`(_`)(Rat_(Loc:Rat),.List`{K`}))),.List`{K`})))),.List`{K`}),_`(_`)(Rat_(?19:Int),.List`{K`}))),_`,`,_(_`(_`)('__,EL:List{K}),_`(_`)(Rat_(_+Nat_(Pos:Nat,1)),.List`{K`})))),?20:K)),k),__(<_>_</_>(nextLoc,_`(_`)(Rat_(_+Rat_(Loc:Rat,1)),.List`{K`}),nextLoc),<_>_</_>(store,__(?21:Map,_|->_(_`(_`)(Rat_(loc(_`(_`)(Rat_(Loc:Rat),.List`{K`}))),.List`{K`}),_`(_`)('intern,E:K))),store)))[metadata "structural rule"].
eq _`(_`)('intern,_`(_`)('#\_,_`(_`)(String_(C:Char),.List`{K`})))= _`(_`)('vc`(_`),_`(_`)(String_(C:Char),.List`{K`}))[metadata "structural rule"].
eq _`(_`)('intern,_`(_`)('#`[_`],_`(_`)('__,EL:List{K})))= _`(_`)('internV,_`,`,_(_`(_`)('vec`(_#_`),_`,`,_(_`(_`)(wmap_(.),.List`{K`}),_`(_`)(Rat_(length(_`(_`)('__,EL:List{K}))),.List`{K`}))),_`,`,_(_`(_`)('__,EL:List{K}),_`(_`)(Rat_(0),.List`{K`}))))[metadata "structural rule"].
eq _`(_`)('intern,_`(_`)('#`[`],.List`{K`}))= _`(_`)('vec`(_#_`),_`,`,_(_`(_`)(wmap_(.),.List`{K`}),_`(_`)(Rat_(0),.List`{K`})))[metadata "structural rule"].
eq _`(_`)('intern,_`(_`)('#f,.List`{K`}))= _`(_`)('vF,.List`{K`})[metadata "structural rule"].
eq _`(_`)('intern,_`(_`)('#t,.List`{K`}))= _`(_`)('vT,.List`{K`})[metadata "structural rule"].
eq _`(_`)('intern,_`(_`)('#unspecified,.List`{K`}))= _`(_`)('vUnspec,.List`{K`})[metadata "structural rule"].
eq _`(_`)('intern,_`(_`)('`[`],.List`{K`}))= _`(_`)('vNil,.List`{K`})[metadata "structural rule"].
eq _`(_`)('intern,_`(_`)(Float_(F:Float),.List`{K`}))= _`(_`)('vf`(_`),_`(_`)(Float_(F:Float),.List`{K`}))[metadata "structural rule"].
eq _`(_`)('intern,_`(_`)(Id_(ID:Id),.List`{K`}))= _`(_`)('vn`(_`),_`(_`)(Id_(ID:Id),.List`{K`}))[metadata "structural rule"].
eq _`(_`)('intern,_`(_`)(Rat_(I:Int),.List`{K`}))= _`(_`)('vi`(_`),_`(_`)(Rat_(I:Int),.List`{K`}))[metadata "structural rule"].
eq _`(_`)('intern,_`(_`)(Rat_(R:Rat),.List`{K`}))= _`(_`)('vr`(_`),_`(_`)(Rat_(R:Rat),.List`{K`}))[metadata "structural rule"].
eq _`(_`)('intern,_`(_`)(String_(Str:String),.List`{K`}))= _`(_`)('internS,_`,`,_(_`(_`)('string`(_#_`),_`,`,_(_`(_`)(wmap_(.),.List`{K`}),_`(_`)(Rat_(lengthString(Str:String)),.List`{K`}))),_`,`,_(_`(_`)(String_(Str:String),.List`{K`}),_`(_`)(Rat_(0),.List`{K`}))))[metadata "structural rule"].
eq _`(_`)('internV,_`,`,_(KR:KResult,_`,`,_(_`(_`)('__,.List`{K`}),_`(_`)(Rat_(?4:Nat),.List`{K`}))))= KR:KResult[metadata "structural rule"].
eq _`[_/_`](Map:Map,K2:K,K1:K)= __(Map:Map,_|->_(K1:K,K2:K))[owise].
eq _`[_`](Map:Map,Map':Map)= __(Map:Map,Map':Map)[owise].
eq _in_(BagItem:BagItem,Bag:Bag)= false[owise].
eq _in_(K:K,Bag:Bag)= false[owise].
eq _in_(K:K,Set:Set)= false[owise].
eq _in_(SetItem:SetItem,Set:Set)= false[owise].
eq inKList(K:K,K':K)= false[owise].
ceq <_>_</_>(k,_~>_(?8:K,_~>_(_`(_`)('internS,_`,`,_(KR:KResult,_`,`,_(_`(_`)(String_(Str:String),.List`{K`}),_`(_`)(Rat_(?9:Nat),.List`{K`})))),?10:K)),k)= <_>_</_>(k,_~>_(?8:K,_~>_(KR:KResult,?10:K)),k)if _==Bool_(lengthString(Str:String),0)[metadata "structural rule"].
ceq <_>_</_>(store,__(?8:Map,_|->_(_`(_`)(Rat_(loc(_`(_`)(Rat_(Loc:Rat),.List`{K`}))),.List`{K`}),_`(_`)('internS,_`,`,_(KR:KResult,_`,`,_(_`(_`)(String_(Str:String),.List`{K`}),_`(_`)(Rat_(?9:Nat),.List`{K`})))))),store)= <_>_</_>(store,__(?8:Map,_|->_(_`(_`)(Rat_(loc(_`(_`)(Rat_(Loc:Rat),.List`{K`}))),.List`{K`}),KR:KResult)),store)if _==Bool_(lengthString(Str:String),0)[metadata "structural rule"].
ceq __(<_>_</_>(nextLoc,_`(_`)(Rat_(Loc:Rat),.List`{K`}),nextLoc),<_>_</_>(store,__(?18:Map,_|->_(_`(_`)(Rat_(loc(_`(_`)(Rat_(Loc':Rat),.List`{K`}))),.List`{K`}),_`(_`)('internS,_`,`,_(_`(_`)('string`(_#_`),_`,`,_(_`(_`)(wmap_(M:Map),.List`{K`}),_`(_`)(Rat_(?19:Int),.List`{K`}))),_`,`,_(_`(_`)(String_(Str:String),.List`{K`}),_`(_`)(Rat_(Pos:Nat),.List`{K`})))))),store))= __(<_>_</_>(nextLoc,_`(_`)(Rat_(_+Rat_(Loc:Rat,1)),.List`{K`}),nextLoc),<_>_</_>(store,__(?18:Map,__(_|->_(_`(_`)(Rat_(loc(_`(_`)(Rat_(Loc:Rat),.List`{K`}))),.List`{K`}),_`(_`)(String_(substrString(Str:String,0,1)),.List`{K`})),_|->_(_`(_`)(Rat_(loc(_`(_`)(Rat_(Loc':Rat),.List`{K`}))),.List`{K`}),_`(_`)('internS,_`,`,_(_`(_`)('string`(_#_`),_`,`,_(_`(_`)(wmap_(__(M:Map,_|->_(_`(_`)(Rat_(Pos:Nat),.List`{K`}),_`(_`)(Rat_(loc(_`(_`)(Rat_(Loc:Rat),.List`{K`}))),.List`{K`})))),.List`{K`}),_`(_`)(Rat_(?19:Int),.List`{K`}))),_`,`,_(_`(_`)(String_(substrString(Str:String,1,lengthString(Str:String))),.List`{K`}),_`(_`)(Rat_(_+Nat_(Pos:Nat,1)),.List`{K`}))))))),store))if _=/=Bool_(lengthString(Str:String),0)[metadata "structural rule"].
ceq __(<_>_</_>(k,_~>_(?19:K,_~>_(_`(_`)('internS,_`,`,_(_`(_`)('string`(_#_`),_`,`,_(_`(_`)(wmap_(M:Map),.List`{K`}),_`(_`)(Rat_(?20:Int),.List`{K`}))),_`,`,_(_`(_`)(String_(Str:String),.List`{K`}),_`(_`)(Rat_(Pos:Nat),.List`{K`})))),?21:K)),k),__(<_>_</_>(nextLoc,_`(_`)(Rat_(Loc:Rat),.List`{K`}),nextLoc),<_>_</_>(store,?22:Map,store)))= __(<_>_</_>(k,_~>_(?19:K,_~>_(_`(_`)('internS,_`,`,_(_`(_`)('string`(_#_`),_`,`,_(_`(_`)(wmap_(__(M:Map,_|->_(_`(_`)(Rat_(Pos:Nat),.List`{K`}),_`(_`)(Rat_(loc(_`(_`)(Rat_(Loc:Rat),.List`{K`}))),.List`{K`})))),.List`{K`}),_`(_`)(Rat_(?20:Int),.List`{K`}))),_`,`,_(_`(_`)(String_(substrString(Str:String,1,lengthString(Str:String))),.List`{K`}),_`(_`)(Rat_(_+Nat_(Pos:Nat,1)),.List`{K`})))),?21:K)),k),__(<_>_</_>(nextLoc,_`(_`)(Rat_(_+Rat_(Loc:Rat,1)),.List`{K`}),nextLoc),<_>_</_>(store,__(?22:Map,_|->_(_`(_`)(Rat_(loc(_`(_`)(Rat_(Loc:Rat),.List`{K`}))),.List`{K`}),_`(_`)(String_(substrString(Str:String,0,1)),.List`{K`}))),store)))if _=/=Bool_(lengthString(Str:String),0)[metadata "structural rule"].
rl <_>_</_>(k,_~>_(_`(_`)('#`[_`],_`(_`)('__,EL:List{K})),?4:K),k)=> <_>_</_>(k,_~>_(_`(_`)('intern,_`(_`)('#`[_`],_`(_`)('__,EL:List{K}))),?4:K),k)[metadata "computational rule"].
rl <_>_</_>(k,_~>_(_`(_`)('`[_`],_`(_`)('__,_`,`,_(_`(_`)(Id_(quote),.List`{K`}),E:K))),?4:K),k)=> <_>_</_>(k,_~>_(_`(_`)('intern,E:K),?4:K),k)[metadata "computational rule"].
rl <_>_</_>(k,_~>_(_`(_`)(String_(Str:String),.List`{K`}),?4:K),k)=> <_>_</_>(k,_~>_(_`(_`)('intern,_`(_`)(String_(Str:String),.List`{K`})),?4:K),k)[metadata "computational rule"].
rl _`(_`)('if_$_$_,_`,`,_(_`(_`)('vF,.List`{K`}),_`,`,_(E1:K,E2:K)))=> E2:K[metadata "computational rule"].
rl _`(_`)('if_$_$_,_`,`,_(_`(_`)('vT,.List`{K`}),_`,`,_(E1:K,E2:K)))=> E1:K[metadata "computational rule"].
endm
