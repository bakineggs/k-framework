
 
 in ../../../../k-prelude
 
 mod JSON-LIST
 	is including PL-INT + PL-FLOAT + PL-STRING + PL-ID .
 	
 	  sort JS .    op null :  -> JS   [metadata "location(json.k:8)"] .  subsort Int <  JS .    subsort Float <  JS .    subsort Bool <  JS . 
 
 	  sort List{JS} .    subsort JS <  List{JS} .    op .List{JS} :  -> List{JS}   [metadata "location(json.k:10)"] .  op _,_ : List{JS}  List{JS} -> List{JS}  [  assoc id: .List{JS} metadata "location(json.k:10)"] . 
 	
 endm
 
 mod JSON-SYNTAX 
 	is including JSON-LIST .
 	
 	  sort Numeric .    subsort Int <  Numeric .    subsort Float <  Numeric . 
 	
 	  sort JsonName .    subsort String <  JsonName .    subsort Id <  JsonName .    subsort Int <  JsonName . 
 
 	  sort JsonObject .    op {} :  -> JsonObject   [metadata "location(json.k:21)"] .  op {_} :  List{JS} -> JsonObject [metadata "location(json.k:21)"] . 
 	
 	  sort JsonArray .    op [] :  -> JsonArray   [metadata "location(json.k:23)"] .  op [_] :  List{JS} -> JsonArray [metadata "location(json.k:23)"] . 
 	
 	  sort JsonTerminal .    op null :  -> JsonTerminal   [metadata "location(json.k:25)"] .  subsort Bool <  JsonTerminal .    subsort Numeric <  JsonTerminal .    subsort JsonName <  JsonTerminal . 
 	
 	  sort JsonLiteral .    subsort JsonTerminal <  JsonLiteral .    subsort JsonObject <  JsonLiteral .    subsort JsonArray <  JsonLiteral . 
 				
 	  sort JsonPair .    op _:_ : JsonName  JS -> JsonPair  [  prec 25 metadata "location(json.k:29)"] . 
 	
 	      subsort JsonLiteral <  JS .    subsort JsonPair <  JS . 
 	
 endm
 
 mod JSON
 	is including JSON-SYNTAX + K .
 	
 	  sort Builtin .    subsort String <  Builtin .    subsort Bool <  Builtin . 
 
 	      subsort Bool <  KResult .    subsort String <  KResult .    subsort Numeric <  KResult . 
 	      subsort JS <  K .    subsort List{JS} <  K . 
 	
 	     
 			 op o(_) :  JSProperties -> JS   [metadata "location(json.k:43)"] .  op a(_) :  List{JS} -> JS
 		  [metadata "location(json.k:44)"] . 	 op buildLitObject(_,_) :  List{JS}  JS -> JS [metadata "location(json.k:45)"] . 
 	
 
 	  sort JSProperty .    op p(_,_) :  JsonName  JS -> JSProperty [metadata "location(json.k:48)"] . 
 	
 	  sort JSProperties .   
 			 op .JSProperties :  -> JSProperties   [metadata "location(json.k:50)"] .  subsort JSProperty <  JSProperties .
 			  op __ : JSProperties  JSProperties -> JSProperties  [  assoc comm id: .JSProperties metadata "location(json.k:52)"] . 
 	
 
 	eq []  =  a(.List{JS} ) [metadata "location(json.k:55)"] .
 	eq [ Elements ] =  a( Elements ) [metadata "location(json.k:56)"] .
 
 	eq { } =  o(.JSProperties ) [metadata "location(json.k:58)"] .	
 
 
 	eq { Elements:List{JS} } =  buildLitObject( Elements , o(.JSProperties ) ) [metadata "location(json.k:61)"] .
 
 	eq buildLitObject((.List{JS} ) , Obj:JS ) =  Obj [metadata "location(json.k:63)"] .
 
 	eq buildLitObject( (Name:JsonName :  Value:JS , Elements) , o(Properties:JSProperties) ) 
 		=  buildLitObject( (Elements) , o(Properties p(Name, Value)) ) [metadata "location(json.k:65)"] .
 
 var Value :  JS . var Elements :  List{JS} . var Properties :  JSProperties . var Name :  JsonName . var Obj :  JS .   subsorts JSProperties Builtin JsonTerminal JsonLiteral < K . endm
 
