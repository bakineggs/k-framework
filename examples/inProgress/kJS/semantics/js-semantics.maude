mod JS-CONVERSIONS is including JS-SYNTAX .
	
	      op toPrimitive(_) :  List{JS} -> JS 
		  [metadata "location(semantics/js-semantics.k:2)"] .  op toBoolean(_) :  JSValue -> JS   [metadata "location(semantics/js-semantics.k:3)"] .  op toNumber(_) :  JSValue -> JS   [metadata "location(semantics/js-semantics.k:3)"] .  op toString(_) :  JSValue -> JS [metadata "location(semantics/js-semantics.k:3)"] . 
	
	
	eq toPrimitive(Prim:JSPrimitive, .List{JS} ) 	=  Prim [metadata "location(semantics/js-semantics.k:7)"] . 
	eq toPrimitive(Value:JSValue) 				=  toPrimitive(Value, $s ("number")) [metadata "location(semantics/js-semantics.k:8)"] . 
	eq toPrimitive(Value, $s ("number"))			=  toNumber(Value) [metadata "location(semantics/js-semantics.k:9)"] .
	eq toPrimitive(Value, $s ("string")) 			=  toString(Value) [metadata "location(semantics/js-semantics.k:10)"] .
	
	
	eq toBoolean(Value) 	=  $b (isTruthy(Value)) [metadata "location(semantics/js-semantics.k:13)"] .

	      op isTruthy(_) :  JSValue -> Bool [metadata "location(semantics/js-semantics.k:14)"] . 
	
	eq isTruthy($undefined ) 		=  false [metadata "location(semantics/js-semantics.k:17)"] .
	eq isTruthy($null ) 			=  false [metadata "location(semantics/js-semantics.k:18)"] .
	eq isTruthy($b (B:Bool)) 		=  B [metadata "location(semantics/js-semantics.k:19)"] .
	eq isTruthy($zero (I:Int)) 	=  false [metadata "location(semantics/js-semantics.k:20)"] .
	eq isTruthy($nan ) 			=  false [metadata "location(semantics/js-semantics.k:21)"] .
	eq isTruthy($s ("")) 			=  false [metadata "location(semantics/js-semantics.k:22)"] .
	eq isTruthy($o (Value)) 		=  true [metadata "location(semantics/js-semantics.k:23)"] .
	
	
	eq toNumber(Numeric:JSNumeric)	=  Numeric [metadata "location(semantics/js-semantics.k:26)"] .
	eq toNumber($undefined ) 			=  $nan  [metadata "location(semantics/js-semantics.k:27)"] .
	eq toNumber($null ) 				=  $n (0) [metadata "location(semantics/js-semantics.k:28)"] .
	eq toNumber($b (true)) 			=  $n (1) [metadata "location(semantics/js-semantics.k:29)"] .
	eq toNumber($b (false)) 			=  $n (0) [metadata "location(semantics/js-semantics.k:30)"] .
	eq toNumber($s (""))				=  $n (0) [metadata "location(semantics/js-semantics.k:31)"] .
	eq toNumber($s (S:String))		=  $n (String2Float(S)) [metadata "location(semantics/js-semantics.k:32)"] .
	eq toNumber(Obj:JSObject)		=  $nan  [metadata "location(semantics/js-semantics.k:33)"] .
	
	
	
	eq toString($undefined ) 			=  $s ("undefined") [metadata "location(semantics/js-semantics.k:37)"] .
	eq toString($null ) 				=  $s ("null") [metadata "location(semantics/js-semantics.k:38)"] .
	eq toString($b (true)) 			=  $s ("true") [metadata "location(semantics/js-semantics.k:39)"] .
	eq toString($b (false)) 			=  $s ("false") [metadata "location(semantics/js-semantics.k:40)"] .
	eq toString($nan ) 				=  $s ("NaN") [metadata "location(semantics/js-semantics.k:41)"] .
	eq toString($n (I:Int)) 			=  $s (Int2String(I)) [metadata "location(semantics/js-semantics.k:42)"] .
	eq toString($n (F:Float)) 		=  $s (Float2String(F)) [metadata "location(semantics/js-semantics.k:43)"] .
	eq toString($infinity (1)) 		=  $s ("Infinity") [metadata "location(semantics/js-semantics.k:44)"] .
	eq toString($infinity (-1)) 		=  $s ("-Infinity") [metadata "location(semantics/js-semantics.k:45)"] .
	eq toString($zero (I)) 			=  $s ("0") [metadata "location(semantics/js-semantics.k:46)"] .
	eq toString($s (S)) 				=  $s (S) [metadata "location(semantics/js-semantics.k:47)"] .
	eq toString(Obj:JSObject) 		=  $s ("[object Object]") [metadata "location(semantics/js-semantics.k:48)"] .
	
var F : Float . var S : String . var Value : JSValue . var B : Bool . var Obj : JSObject . var I : Int . var Numeric : JSNumeric . var Prim : JSPrimitive .  endm 

mod JS-TYPEOF is including JS-SYNTAX . 

	
	eq #typeof ($undefined ) 				=  $s ("undefined") [metadata "location(semantics/js-semantics.k:55)"] .
	eq #typeof ($null ) 					=  $s ("object") [metadata "location(semantics/js-semantics.k:56)"] .
	eq #typeof ($b (B:Bool)) 				=  $s ("boolean") [metadata "location(semantics/js-semantics.k:57)"] .
	eq #typeof (Numeric:JSNumeric) 		=  $s ("number") [metadata "location(semantics/js-semantics.k:58)"] .
	eq #typeof ($s (S:String)) 			=  $s ("string") [metadata "location(semantics/js-semantics.k:59)"] .
	eq #typeof ($o (Value:JSValue)) 		=  $s ("object") [metadata "location(semantics/js-semantics.k:60)"] .
	

	
	
	
	
	
	
	
	
var S : String . var Value : JSValue . var B : Bool . var Numeric : JSNumeric .  endm

mod JS-UNARY is including JS-CONVERSIONS + PL-BOOL . 
	
	
	eq #plus (Value) =  toNumber(Value) [metadata "location(semantics/js-semantics.k:76)"] .

	
	eq #neg (Value) =  neg(Value) [metadata "location(semantics/js-semantics.k:79)"] .

	      op neg(_) :  JSValue -> JSNumeric [metadata "location(semantics/js-semantics.k:81)"] . 
	
	eq neg($n (F:Float)) 		=  $n (-Float (F)) [metadata "location(semantics/js-semantics.k:83)"] .
	eq neg($n (I:Int)) 		=  $n (-Int (I)) [metadata "location(semantics/js-semantics.k:84)"] .
	eq neg($zero (F)) 		=  $zero (-Float (F)) [metadata "location(semantics/js-semantics.k:85)"] .
	eq neg($infinity (F)) 	=  $infinity (-Float (F)) [metadata "location(semantics/js-semantics.k:86)"] .
	eq neg($nan ) 			=  $nan  [metadata "location(semantics/js-semantics.k:87)"] .
	eq neg(Value:JSValue) 	=  neg(toNumber(Value)) [metadata "location(semantics/js-semantics.k:88)"] .

	
	eq #not ($b (B:Bool)) 		=  not($b (B)) [metadata "location(semantics/js-semantics.k:91)"] .
	eq #not (Value) 			=  not(toBoolean(Value)) [metadata "location(semantics/js-semantics.k:92)"] .

	      op not(_) :  JSBoolean -> JSBoolean [metadata "location(semantics/js-semantics.k:94)"] . 
	
	eq not($b (B)) 			=  $b (notBool(B)) [metadata "location(semantics/js-semantics.k:96)"] .

	
	
	
	
var F : Float . var Value : JSValue . var B : Bool . var I : Int .  endm

mod JS-ARITHMETIC is including JS-UNARY + JS-SYNTAX . 

	      op arith(_,_,_) :  String  JS  JS -> JS 
				  [metadata "location(semantics/js-semantics.k:106)"] .  op getInfinity(_,_) :  Int  Int -> JS 
				  [metadata "location(semantics/js-semantics.k:107)"] .  op getZero(_,_) :  Int  Int -> JS [metadata "location(semantics/js-semantics.k:108)"] . 
			
	eq getInfinity(Sign1:Int, Sign2:Int) 	=  $infinity (Sign1 *Int  Sign2) [metadata "location(semantics/js-semantics.k:110)"] .
	eq getZero(Sign1, Sign2) 				=  $zero (Sign1 *Int  Sign2) [metadata "location(semantics/js-semantics.k:111)"] .
	
	
	eq #div (Left:JS, Right:JS) 	=  arith("div", Left, Right) [metadata "location(semantics/js-semantics.k:114)"] .
	eq #mod (Left, Right) 		=  arith("mod", Left, Right) [metadata "location(semantics/js-semantics.k:115)"] .
	eq #mul (Left, Right) 		=  arith("mul", Left, Right) [metadata "location(semantics/js-semantics.k:116)"] .
	eq #sub (Left, Right) 		=  arith("sub", Left, Right) [metadata "location(semantics/js-semantics.k:117)"] .
	eq #add (Left, Right) 		=  arith("add", toPrimitive(Left), toPrimitive(Right)) [metadata "location(semantics/js-semantics.k:118)"] .
	
	
	eq arith("div", $n (F1:Float), $n (F2:Float)) 	=  $n (F1 /Float  F2) [metadata "location(semantics/js-semantics.k:121)"] .
	eq arith("mod", $n (F1), $n (F2)) 				=  $n (F1 %Float  F2) [metadata "location(semantics/js-semantics.k:122)"] .
	eq arith("mul", $n (F1), $n (F2)) 				=  $n (F1 *Float  F2) [metadata "location(semantics/js-semantics.k:123)"] .
	eq arith("add", $n (F1), $n (F2)) 				=  $n (F1 +Float  F2) [metadata "location(semantics/js-semantics.k:124)"] .
	eq arith("sub", $n (F1), $n (F2)) 				=  $n (_-Float_(F1, F2)) [metadata "location(semantics/js-semantics.k:125)"] .

	eq arith("div", $n (I1:Int), $n (I2:Int)) 		=  $n (I1 /Int  I2) [metadata "location(semantics/js-semantics.k:127)"] .
	eq arith("mod", $n (I1), $n (I2)) 				=  $n (I1 %Int  I2) [metadata "location(semantics/js-semantics.k:128)"] .
	eq arith("mul", $n (I1), $n (I2)) 				=  $n (I1 *Int  I2) [metadata "location(semantics/js-semantics.k:129)"] .
	eq arith("add", $n (I1), $n (I2)) 				=  $n (I1 +Int  I2) [metadata "location(semantics/js-semantics.k:130)"] .
	eq arith("sub", $n (I1), $n (I2)) 				=  $n (_-Int_(I1, I2)) [metadata "location(semantics/js-semantics.k:131)"] .
	
	
	eq arith(OpId:String, $nan , Right) 	=  $nan  [metadata "location(semantics/js-semantics.k:134)"] .
	eq arith(OpId, Left, $nan ) 			=  $nan  [metadata "location(semantics/js-semantics.k:135)"] .


	
	eq arith("mul", $infinity (Sign1), $infinity (Sign2)) 	=  getInfinity(Sign1, Sign2) [metadata "location(semantics/js-semantics.k:139)"] .
	eq arith("mul", $zero (Sign1), $infinity (Sign2)) 		=  $nan  [metadata "location(semantics/js-semantics.k:140)"] . 
	eq arith("mul", $infinity (Sign1), $zero (Sign2)) 		=  $nan  [metadata "location(semantics/js-semantics.k:141)"] . 
	eq arith("mul", $zero (Sign1), Num:JSNumber) 			=  getZero(Sign1, sign(Num)) [metadata "location(semantics/js-semantics.k:142)"] .
	eq arith("mul", Num, $zero (Sign2)) 					=  getZero(sign(Num), Sign2) [metadata "location(semantics/js-semantics.k:143)"] .
	eq arith("mul", $infinity (Sign1), Num) 				=  getInfinity(Sign1, sign(Num)) [metadata "location(semantics/js-semantics.k:144)"] .
	eq arith("mul", Num, $infinity (Sign2)) 				=  getInfinity(sign(Num), Sign2) [metadata "location(semantics/js-semantics.k:145)"] .
	
	
	eq arith("div", $infinity (Sign1), $infinity (Sign2)) 	=  $nan  [metadata "location(semantics/js-semantics.k:148)"] .	
	eq arith("div", $infinity (Sign1), Num) 				=  getInfinity(Sign1, sign(Num)) [metadata "location(semantics/js-semantics.k:149)"] .
	eq arith("div", Num, $infinity (Sign2)) 				=  getZero(sign(Num), Sign2) [metadata "location(semantics/js-semantics.k:150)"] .
	eq arith("div", $zero (Sign1), $zero (Sign2)) 			=  $nan  [metadata "location(semantics/js-semantics.k:151)"] .
	eq arith("div", $zero (Sign1), Num) 					=  getZero(Sign1, sign(Num)) [metadata "location(semantics/js-semantics.k:152)"] .
	eq arith("div", Num, $zero (Sign2)) 					=  getInfinity(sign(Num), Sign2) [metadata "location(semantics/js-semantics.k:153)"] .
	
	
	eq arith("mod", $infinity (Sign1), Num) 	=  $nan  [metadata "location(semantics/js-semantics.k:156)"] .
	eq arith("mod", Num, $zero (Sign2)) 		=  $nan  [metadata "location(semantics/js-semantics.k:157)"] .
	eq arith("mod", Num, $infinity (Sign2)) 	=  Num [metadata "location(semantics/js-semantics.k:158)"] .
	eq arith("mod", $zero (Sign1), Num) 		=  $zero (Sign1) [metadata "location(semantics/js-semantics.k:159)"] .
	
	
	eq arith("add", $s (S1:String), $s (S2:String)) 	=  $s (_+String_(S1, S2)) [metadata "location(semantics/js-semantics.k:162)"] .
	eq arith("add", $s (S1), Value:JSValue) 			=  arith("add", $s (S1), toString(Value)) [metadata "location(semantics/js-semantics.k:163)"] .
	eq arith("add", Value, $s (S2)) 					=  arith("add", toString(Value), $s (S2)) [metadata "location(semantics/js-semantics.k:164)"] .

	eq arith("add", $infinity (Sign1), $infinity (Sign2)) 	=  $nan  [metadata "location(semantics/js-semantics.k:166)"] .
	eq arith("add", Num, $infinity (Sign2)) 				=  $infinity (Sign2) [metadata "location(semantics/js-semantics.k:167)"] .
	eq arith("add", $infinity (Sign1), Num) 				=  $infinity (Sign1) [metadata "location(semantics/js-semantics.k:168)"] .
	eq arith("add", $zero (Sign1), $zero (Sign2)) 			=  $zero (1) [metadata "location(semantics/js-semantics.k:169)"] .
	eq arith("add", $zero (Sign1), Num) 					=  Num [metadata "location(semantics/js-semantics.k:170)"] .
	eq arith("add", Num, $zero (Sign2)) 					=  Num [metadata "location(semantics/js-semantics.k:171)"] .
	
	
	eq arith("sub", Left, Right) =  arith("add", Left, neg(Right)) [metadata "location(semantics/js-semantics.k:174)"] .
	
	
	eq arith(OpId, Left, Right) 	=  arith(OpId, toNumber(Left), toNumber(Right)) [metadata "location(semantics/js-semantics.k:177)"] .
	
var S1 : String . var Value : JSValue . var Right : JS . var Sign2 : Int . var Sign1 : Int . var OpId : String . var I2 : Int . var S2 : String . var F2 : Float . var Num : JSNumber . var F1 : Float . var Left : JS . var I1 : Int .  endm

mod JS-COMPARISON is including JS-UNARY + JS-SYNTAX + PL-BUILTINS .

	
	eq #lt (Left:JS, Right:JS) 	=  comparison(lessThan(Left, Right), true) [metadata "location(semantics/js-semantics.k:184)"] .
	eq #gt (Left:JS, Right:JS) 	=  comparison(lessThan(Right, Left), true) [metadata "location(semantics/js-semantics.k:185)"] .
	eq #lte (Left:JS, Right:JS) 	=  comparison(lessThan(Right, Left), false) [metadata "location(semantics/js-semantics.k:186)"] .
	eq #lte (Left:JS, Right:JS) 	=  comparison(lessThan(Left, Right), false) [metadata "location(semantics/js-semantics.k:187)"] .

	
	
	      op comparison(_,_) :  JSPrimitive  Bool -> JSBoolean [metadata "location(semantics/js-semantics.k:191)"] . 
	      op lessThan(_,_) :  JSPrimitive  JSPrimitive -> JSPrimitive [metadata "location(semantics/js-semantics.k:192)"] . 
	
	eq comparison($undefined , B:Bool)	=  $b (false) [metadata "location(semantics/js-semantics.k:194)"] .
	eq comparison($b (B:Bool), true)		=  $b (B) [metadata "location(semantics/js-semantics.k:195)"] .
	eq comparison($b (B:Bool), false)		=  not($b (B)) [metadata "location(semantics/js-semantics.k:196)"] .
	
	eq lessThan($nan , Right)					 =  $undefined  [metadata "location(semantics/js-semantics.k:198)"] .
	eq lessThan(Left, $nan )					 =  $undefined  [metadata "location(semantics/js-semantics.k:199)"] .
	eq lessThan($s (S1:String), $s (S2:String)) =  $b (_<String_(S1, S2)) [metadata "location(semantics/js-semantics.k:200)"] .
	eq lessThan($n (I1:Int), $n (I2:Int)) 	 	 =  $b (_<Int_(I1, I2)) [metadata "location(semantics/js-semantics.k:201)"] .
	eq lessThan(N1:JSNumeric, N2:JSNumeric) 	 =  $b (_<Float_(numericValue(N1), numericValue(N2))) [metadata "location(semantics/js-semantics.k:202)"] .
	eq lessThan(Left, Right) 				 =  lessThan(toNumber(Left), toNumber(Right)) [metadata "location(semantics/js-semantics.k:203)"] .	
var N1 : JSNumeric . var S1 : String . var Right : JS . var N2 : JSNumeric . var B : Bool . var I2 : Int . var S2 : String . var Left : JS . var I1 : Int .  endm



























































mod JS-SEMANTICS
	is including 
	  JS-CONVERSIONS 
	+ JS-TYPEOF
	+ JS-UNARY
	+ JS-ARITHMETIC
	+ JS-COMPARISON .
	
	
	
endm