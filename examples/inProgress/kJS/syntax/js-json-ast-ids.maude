mod JS-JSON-AST-IDS
    is including PL-INT + PL-FLOAT + PL-STRING + PL-ID .

      sort JSJsonAstIds .   
		 op assignOp :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:3)"] . 		 op body :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:5)"] . 		 op caseLabel :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:6)"] . 		 op cases :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:7)"] . 		 op children :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:8)"] . 		 op condition :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:9)"] . 		 op defaultIndex :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:10)"] . 		 op destructurings :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:11)"] . 		 op discriminant :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:12)"] . 		 op elsePart :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:13)"] . 		 op end :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:14)"] . 		 op expDecls :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:15)"] . 		 op expression :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:16)"] . 		 op funDecls :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:17)"] . 		 op functionForm :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:18)"] . 		 op hasEmptyReturn :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:19)"] . 		 op hasReturnWithValue :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:20)"] . 		 op impDecls :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:21)"] . 		 op initializer :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:22)"] . 		 op isGenerator :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:23)"] . 		 op isLoop :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:24)"] . 		 op iterator :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:25)"] . 		 op label :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:26)"] . 		 op lineno :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:27)"] . 		 op name :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:28)"] . 		 op object :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:29)"] . 		 op params :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:30)"] . 		 op parenthesized :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:31)"] . 		 op postfix :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:32)"] . 		 op readOnly :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:33)"] . 		 op setup :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:34)"] . 		 op start :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:35)"] . 		 op statement :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:36)"] . 		 op statements :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:37)"] . 		 op thenPart :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:38)"] . 		 op type :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:39)"] . 		 op update :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:40)"] . 		 op value :  -> JSJsonAstIds 
 [metadata "location(js-json-ast-ids.k:41)"] . 		 op varDecls :  -> JSJsonAstIds [metadata "location(js-json-ast-ids.k:42)"] . 
endm
