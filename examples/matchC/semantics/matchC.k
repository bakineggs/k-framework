load ../lib/ml-prelude.maude
load matchC-syntax
load matchC-semantics

kmod MATCHC is
  including MATCHC-SEMANTICS
    + MATHEMATICAL-DOMAIN-BUILTIN-MODULE
    + LIST-HP
    + BINARY-TREE-HP

  kvar N M : Nat

  syntax BagItem ::= check ( KLabel )
                   | run ( KLabel )
                   | ( Nat feasible and Nat infeasible paths)
                     [format(g! d d d d d o)]

  macro check(Kl:KLabel) = <T_>
                             <program> Kl(.List{K}) ~> checkContracts </program>
                             <tasks> .Bag </tasks>
                           <_/T>
  macro run(Kl:KLabel) = <T_>
                           <program> Kl(.List{K}) ~> runMain </program>
                           <tasks> .Bag </tasks>
                         <_/T>


***(
Output
***)
*** rule
***      <T_>
***        <feasible> N </feasible>
***        <infeasible> M </infeasible>
***        <program> .K </program>
***        <tasks> .Bag </tasks>
***      <_/T>
***    =>
***      N feasible and M infeasible paths
***  [metadata "structural"]
  rule
    <feasible> N => N +Int 1 </feasible>
    (
      <config_>
        <k> .K </k>
      <_/config>
    =>
      .Bag
    )
  [metadata "structural"]
  rule
    <infeasible> N => N +Int 1 </infeasible>
    (
      <config_>
        <form> FalseFormula </form>
      <_/config>
    =>
      .Bag
    )
  [metadata "structural"]
endkm

