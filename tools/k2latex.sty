%%% Layout and design imports.

\usepackage{times}
\usepackage[small,compact]{titlesec}
\usepackage{arydshln}

%%% Additional symbols and notation.

\usepackage{amsmath}
\usepackage{amssymb}
\usepackage{stmaryrd}

%%% Graphics.

\usepackage[usenames,dvipsnames,svgnames,x11names]{xcolor}
\usepackage{tikz}
\usetikzlibrary{shapes.misc}
\usetikzlibrary{positioning}
\usetikzlibrary{calc}
\usetikzlibrary{fit}
\usetikzlibrary{decorations.pathmorphing}

%%% PDF functionality.

\usepackage[pdftex]{hyperref}

%%% Auxiliary packages .

\usepackage{calc}
\usepackage{ifthen}
\usepackage{ucs}
\usepackage{xspace}



\makeatletter

% Page Setup %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% To output all definitions, rules, and comments onto a single, long page, we
% take the following steps:
%
% - Wrap the whole document in a 'kdefinition' environment and tell the
%   'preview' package to typeset it onto a single page.  This gives us a single
%   page of output.  Setting a suitable border and the 'tightpage' option
%   adjusts the page height to match the content.
%
% - Finding the correct page width requires two runs of TeX[1].  In the first
%   run, we mark the width of every typeset block (rules, comments, etc.).
%   This information is is written into an auxiliary file of name
%   '\jobname.mrk'.  At the beginning of the second run, we read this file
%   (if it exists), determine the maximum width, and use the maximum as
%   the text width.  If no width information is available, we default to
%   a text width of 16 inches.
%
% ---
% [1] (At least) two runs are necessary anyway: cross-referencing and indexing
%     require them, and so do PDF annotations.


%%% Use the 'preview' package to typeset everything onto a single page.

\usepackage[active,tightpage,pdftex]{preview}
\setlength\PreviewBorder{5pt}

% Everything within an environment that is marked as \PreviewEnvironment
% is put onto its own page.  Thus, by defining a global environment that
% wraps the whole document, we get all output on a single page.
%
% The 'kompile.pl' script takes care of the wrapping.
\newenvironment{kdefinition}{}{}
\PreviewEnvironment{kdefinition}


%%% Determine the text width from markers put at the lower right end of
%   each content block.

% The system layer of the 'PGF' package hides the gory details.
% (See "Position Tracking Commands" in Part XIII of the PGF manual.)
\usepackage{pgfsys}

% Try to load the marker positions from the previous run.
\newcounter{k@prevMarkerCount}%
\InputIfFileExists{\jobname.mrk}{}{}%

% Set the text width to the maximum of the X coordinates.
\newlength{\k@maxX}%
\newlength{\k@currentMarkerX}%

\whiledo{\value{k@prevMarkerCount} > 0}{%
  \addtocounter{k@prevMarkerCount}{-1}%
  \pgfsys@getposition{k@marker@\the\c@k@prevMarkerCount}{\k@currentMarker}%
  \pgfextractx{\k@currentMarkerX}{\k@currentMarker}%
    \ifthenelse{\lengthtest{\k@currentMarkerX > \k@maxX}}{%
      \setlength{\k@maxX}{\k@currentMarkerX}%
    }{}%
}%
\ifthenelse{\lengthtest{\k@maxX > 0pt}}{%
  \setlength{\textwidth}{\k@maxX}%
}{%
  \setlength{\textwidth}{16in}%
}%


% To mark the position, we use the PGF system layer macro \pgfsys@markposition.
% However, this macro usually writes to the main auxiliary file '\jobname.aux'.
% This will not work in our setting because the marker positions would then
% only be available just before the document starts, which is too late to set
% the text width.  Thus we use our own auxiliary file.

% Open the marker file for writing.
\newwrite\k@markerOut
\immediate\openout\k@markerOut=\jobname.mrk

\newcounter{k@marker}
% The marker macro generates the marker names and briefly swaps the output
% stream that \pgfsys@markposition uses before calling it.
\newcommand{\k@markPosition}{%
  \let\k@tmpAuxOut=\pgfutil@auxout%
  \let\pgfutil@auxout=\k@markerOut%
  \pgfsys@markposition{k@marker@\the\c@k@marker}%
  \let\pgfutil@auxout=\k@tmpAuxOut%
  \addtocounter{k@marker}{1}%
}

% Also store the number of set markers for the next run (for easier looping).
\AtEndDocument{%
  \immediate\write\k@markerOut{%
    \string\setcounter{k@prevMarkerCount}{\the\c@k@marker}%
  }{}%
}


% Title %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\renewcommand{\@maketitle}{
 \null
 \vskip 2em%
 \begin{quote}%
  {\LARGE \@title \par}%
  {\Large \@author\par}%
 \end{quote}%
 \par%
}


% Source Comments %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\usepackage{fancyvrb}
\usepackage{fancybox}

\tikzset{comment/.style={
    rectangle,
    rounded corners,
    draw,
    fill=black!10,
    inner sep=.75em
  }
}


% The comment environment.
\newenvironment{latexComment}{%
  \begin{Sbox}%
    \begin{minipage}{50em}%
}{%
    \end{minipage}%
  \end{Sbox}%
  \bigskip%
  \begin{tikzpicture}
    \node[comment]{\TheSbox};
  \end{tikzpicture}%
  \k@markPosition%
  \medskip%
}

% Macros for use in the comments.
\newcommand{\K}{\mbox{$\mathbb{K}$}\xspace}
\newcommand{\KLabel}{\textit{KLabel}\xspace}
\newcommand{\KResult}{\textit{KResult}\xspace}


% Special Glyphs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newcommand{\lp}{(}
\newcommand{\rp}{)}
\newcommand{\myquote}[1]{\text{\rmfamily ``\ttfamily #1\rmfamily ''}}
\newcommand{\mysinglequote}[1]{\text{\rmfamily "}}
\newcommand{\mybracket}[1]{(#1)}
\newcommand{\sqbracket}[1]{[#1]}
\newcommand{\crlbracket}[1]{{#1}}

\newcommand{\nothing}{}
\newcommand{\somespace}{\mathbin{}}
\newcommand{\subscript}[1]{\ensuremath{\nothing_{#1}}}

\newcommand{\kLarge}[1]{\left(\begin{array}{@{}c@{}}#1\end{array}\right)}
\newcommand{\kBR}{\\}


% Modules %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newenvironment{module}[1]{%
  \par\noindent%
  \text{\scshape Module #1}%
  \setlength{\parindent}{1em}%
}{%
  \par\noindent\text{\scshape end module}%
}
\newcommand{\moduleName}[1]{#1}
\newcommand{\including}[1]{\par\text{\scshape imports}\ #1}
\newcommand{\modulePlus}{$+$}


% Syntax %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Sorts and kinds.
\newcommand{\sorts}[1]{}
\newcommand{\sort}[1]{\text{\itshape #1}}
\newcommand{\kind}[1]{\text{\itshape #1}}

% Syntax rules.
\newlength{\syntaxlength}  % The amount of indention for continued rules.

\newcommand{\syntax}[3]{\par%
 $#1\mathrel{::=}{#2}$ \ifthenelse{\equal{#3}{}}{}{[#3]}%
}
\newcommand{\syntaxCont}[3]{\par%
  $\setlength{\syntaxlength}{\widthof{$\mathrel{::=}$}}%
  \setlength{\syntaxlength}{.5\syntaxlength}%
  \addtolength{\syntaxlength}{\widthof{$#1$}}%
  \hspace{\syntaxlength}%
  \;\;\!\mid\;{#2}$ \ifthenelse{\equal{#3}{}}{}{[#3]}%
}

% Non-terminals.
\newcommand{\nonTerminal}[1]{\text{\itshape #1}\/}

% Terminals.
\newcommand{\terminal}[1]{\ensuremath\mathrel{\text{\ttfamily #1}}}
\newcommand{\terminalNoSpace}[1]{\ensuremath\mathord{\text{\ttfamily #1}}}

% Tags.
\newcommand{\kassoc}{assoc}
\newcommand{\kcomm}{comm}
\newcommand{\khybrid}{{\color{blue}hybrid}}
\newcommand{\kid}[1]{id: {#1}}
\newcommand{\kditto}{ditto}
\newcommand{\karity}[1]{{\color{blue}arity(#1)}}
\newcommand{\kstrict}[2]{{%
  \color{blue}strict%
  \ifx&#1&%
  \else%
    (#1)%
  \fi%
  \ifx&#2&%
  \else%
    in (#2)%
  \fi%
}}
\newcommand{\kseqstrict}[2]{{%
  \color{blue}seqstrict%
  \ifx&#1&%
  \else%
    (#1)%
  \fi%
  \ifx&#2&%
  \else%
    in (#2)%
  \fi%
}}


% Configuration %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newcommand{\kconfig}[1]{\par%
  {\sc configuration:}%
  \setlength{\parindent}{2em}%
  \par $#1$%
  \setlength{\parindent}{1em}%
}


% Cells %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newcommand{\cellDecl}[2]{\par%
  \text{\scshape cell:} $#1$ wraps $#2$%
}

%%% Cell contents.

\newcommand{\reduceTop}[2]{{#1}\Rightarrow{#2}}
\newcommand{\reduceTopS}[2]{{#1}\rightharpoonup{#2}}
\newcommand{\reduce}[2]{%
  \begin{array}[t]{@{\extracolsep{0ex}}c@{\extracolsep{0ex}}}%
  {#1}\\\hline{#2}%
  \end{array}%
}
\newcommand{\reduceS}[2]{%
  \begin{array}[t]{@{\extracolsep{0ex}}c@{\extracolsep{0ex}}}
  {#1}\\\hdashline[1pt/1pt]{#2}%
  \end{array}%
}
\newcommand{\kra}{\curvearrowright}
\newcommand{\kvalue}[1]{{\color{red}#1}}
\newcommand{\constant}[2]{\text{\sffamily #1}}
\newcommand{\variable}[2]{\text{{\itshape #1}\/}}
\newcommand{\prefixOp}[1]{\text{\sffamily #1}}
\newcommand{\dotCt}[1]{\ensuremath{\kdot_{\scriptscriptstyle\color{gray}\it #1}}}

%%% Mathematical notation.

\newcommand{\mall}[3]{\langle{#3}\rangle_{\sf #2}}
\newcommand{\mallLarge}[3]{\left\langle\begin{array}{c}#3\end{array}\right\rangle_{{\sf #2}}}
\newcommand{\ellipses}{\mathrel{\cdot\!\!\cdot\!\!\cdot}}
\newcommand{\mprefix}[3]{\mall{#1}{#2}{{#3}\ \ellipses}}
\newcommand{\msuffix}[3]{\mall{#1}{#2}{\ellipses\ {#3}}}
\newcommand{\mmiddle}[3]{\mall{#1}{#2}{\ellipses\ {#3}\ \ellipses}}
\newcommand{\mdot}{\cdot}
\newcommand{\mAnyVar}[1]{\_}

%%% Bubble notation.

\newcommand{\ball}[3]{\kcell{#1}{#2}{$#3$}{convex}{convex}}
\newcommand{\ballLarge}[3]{%
  \kcell{#1}%
        {#2}%
        {$\begin{array}{@{}c@{}}%
            #3%
          \end{array}$}%
        {convex}%
        {convex}%
}
\newcommand{\bprefix}[3]{\kcell{#1}{#2}{$#3$}{convex}{none}}
\newcommand{\bsuffix}[3]{\kcell{#1}{#2}{$#3$}{none}{convex}}
\newcommand{\bmiddle}[3]{\kcell{#1}{#2}{$#3$}{none}{none}}
\newcommand{\bdot}{{\scriptscriptstyle\bullet}}
\newcommand{\bAnyVar}[1]{\mbox{---}}

\newcommand{\kcell}[5]{
\begin{tabular}{@{}c@{}}
\vtop{
\vskip-1ex
\hbox{
\begin{tikzpicture}
  \node[draw=#1!50!black,line width=1pt,name=cell,shape=rounded rectangle,/pgf/rounded rectangle arc length=180,/pgf/rounded rectangle east arc=#5,/pgf/rounded rectangle west arc=#4,fill=#1!20,minimum height=4ex,minimum width=3em]{#3};
\draw[shift=(cell.north east)]plot coordinates{(-.1pt,-.5pt)} node[name=ce,minimum size=.01pt,inner sep=0pt]{};
\draw[shift=(cell.north west)]plot coordinates{(.1pt,-.5pt)} node[name=cw,     minimum size=.01pt,inner sep=0pt]{};
\draw[color=#1!20,line width=1.2pt](cw.east)--(ce.west);
\draw[shift=(cell.north west)]plot coordinates{(0,-1.05pt)}
node[name=label,inner sep=0pt,anchor=south west,shape=rounded rectangle,/pgf/rounded rectangle arc length=180,/pgf/rounded rectangle east arc=convex,/pgf/rounded rectangle west arc=convex,fill=#1!20,draw=#1!20,line width=1pt,minimum width=2em,minimum height=2.5ex,draw=#1!50!black]
{\textsf{\footnotesize #2}};%
\draw[shift=(label.south east)]plot coordinates{(-.1pt,.5pt)} node[name=le,minimum size=.01pt,inner sep=0pt]{};
\draw[shift=(label.south west)]plot coordinates{(.1pt,.5pt)} node[name=lw,     minimum size=.01pt,inner sep=0pt]{};
\draw[color=#1!20,line width=1.2pt](lw.east)--(le.west);
\draw[color=#1!50!black,line width=1pt](le.west) -- (ce.east);
\ifthenelse{\equal{#4}{none}}{%
\draw[fill,color=#1!50!black,decorate,decoration={coil,aspect=0,segment length=.5ex,amplitude=1pt}](cell.south west)--(cell.north west);%
}{
}
\ifthenelse{\equal{#5}{none}}{%
\draw[fill,color=#1!50!black,decorate,decoration={coil,aspect=0,segment length=.5ex,amplitude=1pt}](cell.north east)--(cell.south east);%
}{
}
\end{tikzpicture}%
}
\vskip2ex}
\end{tabular}
}


% Rules and Equations %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newcommand{\when}[1]{%
  \hspace{2em} when \ensuremath{#1}%
  \k@markPosition%
  \bigskip%
}

%%% Context

% Context.
\newcommand{\kcontext}[2]{\par%
  \text{\scshape context:} $#2$%
  \k@markPosition%
}
% Conditional context.
\newcommand{\kccontext}[3]{\par%
  \text{\scshape context:} $#2$ %
  \when{#3}%
}

%%% Equations and structural rules.

\newcommand{\kequation}[2]{\par%
  \text{\scshape #1 rule:}\hspace{1em}$#2$%
  \k@markPosition%
  \bigskip%
}
\newcommand{\kcequation}[3]{\par%
  \text{\scshape #1 rule:}\hspace{1em}$#2$%
  \when{#3}
}
\newcommand{\mequation}[3]{\par%
  \text{\scshape #1 macro:}\hspace{1em}$#2 = #3$%
  \k@markPosition%
}
\newcommand{\cmequation}[4]{\par%
  \text{\scshape #1 equation:}\hspace{1em}$#2 = #3$%
  \when{#4}%
}

%%% Rules.

\newcommand{\krule}[2]{\par%
  \indent\text{\scshape #1 rule:}\hspace{1em}$#2$%
  \bigskip%
}
\newcommand{\kcrule}[3]{\par%
  \text{\scshape #1 rule:}\hspace{1em}$#2$%
  \when{#3}%
}
\newcommand{\kndrule}[2]{\par%
  \text{\scshape #1 non-det rule:}%
  \setlength{\parindent}{3em}%
  \par$#2$%
  \setlength{\parindent}{2em}%
  \bigskip%
}
\newcommand{\mrule}[3]{\par%
  \text{\scshape #1 rule:}\hspace{1em}$#2 \Rightarrow #3$%
  \k@markPosition%
  \bigskip%
}
\newcommand{\cmrule}[4]{\par%
  \text{\scshape #1 rule:}\hspace{1em}$#2 \Rightarrow #3$%
  \when{#4}%
}


\makeatother

